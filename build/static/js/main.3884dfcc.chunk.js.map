{"version":3,"sources":["helpers/createWorld.js","components/layout/ColorPicker.js","actions/index.js","components/LayerPanel.js","components/ModelList.js","components/Ground.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","FBXLoader","THREE","raycaster","mouse","host","document","getElementById","background","antialias","setPixelRatio","window","devicePixelRatio","setSize","clientWidth","clientHeight","shadowMap","enabled","appendChild","domElement","position","set","up","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","g","pos","getAttribute","pa","array","j","i","length","needsUpdate","computeVertexNormals","generateTerrain","geometry","material","color","side","flatShading","plane","castShadow","receiveShadow","add","light","shadow","near","far","left","bottom","right","top","bias","mapSize","x","y","lhelper","onWindowResize","console","log","aspect","updateProjectionMatrix","animate","requestAnimationFrame","update","render","addEventListener","event","el","getBoundingClientRect","clientX","clientY","setFromCamera","intersects","intersectObject","lookAt","face","normal","copy","point","prototype","load2","files","callback","scope","this","file","reader","FileReader","onload","target","readyState","status","parse","result","responseText","readAsArrayBuffer","ColorPicker","props","keys","state","clicked","style","backgroundColof","border","borderRadius","width","height","float","React","Component","defaultProps","loadModel","model","type","id","Date","now","changeSection","section","connect","layers","api","dispatch","defaultCheckedKeys","useState","setLayers","useEffect","className","onClick","setTimeout","e","stopPropagation","confirm","margin","showLine","checkable","multiple","checkStrictly","selectable","defaultExpandAll","onExpand","expandedKeys","defaultSelectedKeys","onSelect","selectedKeys","info","title","node","toLowerCase","onCheck","checkedKeys","treeData","models","vectors","data","mode","setMode","JSON","stringify","setPosition","scale","setScale","rotation","setRotation","vector","setVector","newPosition","newRotation","newScale","newMode","newVector","map","d","z","onChange","func","oldState","value","Fragment","name","size","toFixed","filter","v","r","mesh","clone","rot","Number","sca","selected","index","vec","positions","attributes","loader","crossOrigin","load","texture","error","Modal","setAppElement","active","loadVector","setScene","setPlane","menuOpen","setMenuOpen","modalOpen","setModalOpen","setFiles","elements","setElements","toggleModal","newWorld","Navbar","expand","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","NavbarText","NavLink","class","split","minSize","maxSize","defaultSize","Ground","onRequestClose","extention","indexOf","rows","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","push","n","readAsBinaryString","newLayers","children","key","object","traverse","child","isMesh","Boolean","location","hostname","match","initialState","titles","combineReducers","action","Object","assign","rootElement","loggerMiddleware","createLogger","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3884dfcc.chunk.js","sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\n\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer) {\n\tloaders.FBXLoader = FBXLoader;\n\tvar clock = new THREE.Clock();\n      var raycaster = new THREE.Raycaster();\n      var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n        scene.background = new THREE.Color( 0x000000 );\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n        renderer.shadowMap.enabled = true;\n\n\n        document.getElementById(\"three-map\").appendChild( renderer.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        camera.position.set( 80, 80, 80 );\n        camera.up.set(0,0,1);\n        // controls\n        controls = new OrbitControls( camera, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 10;\n        controls.maxDistance = 1000;\n        controls.maxPolarAngle = Math.PI / 2;\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 100, 100 );\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = true;\n        plane.receiveShadow = true;\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        var light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( 1, 1, 100 );\n        light.shadow = {\n          camera: {\n            near: 0.5,\n            far: 300,\n            left: -50,\n            bottom: -50,\n            right: 50,\n            top: 50\n          },\n          bias: 0.0001,\n          mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        };\n        scene.add( light );\n        \n\n        var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        scene.add( lhelper );\n\n        var light = new THREE.DirectionalLight( 0x002288 );\n        light.position.set( - 0, - 0, - 100 );\n        scene.add( light );\n\n\n        var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        scene.add( lhelper );        \n\n        var light = new THREE.AmbientLight( 0x666666 );\n        scene.add( light );\n\n\n        var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        var material = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n        pointer = new THREE.Mesh( geometry, material );\n        scene.add( pointer );\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n        function onMouseMove( event ) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        const el = document.getElementById(\"three-map\").getBoundingClientRect()\n        const left = el.left;\n        const top = el.top;\n        mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n        mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        // See if the ray from the camera into the world hits one of our meshes\n        var intersects = raycaster.intersectObject( plane );\n\n        // Toggle rotation bool for meshes that we clicked\n        if ( intersects.length > 0 ) {\n\n          pointer.position.set( 0, 0, 0 );\n          pointer.lookAt( intersects[ 0 ].face.normal );\n\n          pointer.position.copy( intersects[ 0 ].point );\n\n        }\n\n}\n      function onWindowResize() {\n        console.log(\"in\")\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n        requestAnimationFrame( animate );\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n\n      function render() {\n        // var delta = clock.getDelta();\n\n        // if ( mixer ) mixer.update( delta );\n        renderer.render( scene, camera );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      window.addEventListener( 'mousedown', onMouseMove, false );\n\n      partials = {plane,pointer};\n      return {camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n} ","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  static propTypes = {\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n    const { keys } = props;\n    this.state = {\n      clicked: false,\n      color:\"#000\"\n    };\n\n  }\n\n  render() {\n    if(this.state.clicked) {\n      return <SketchPicker />\n    }\n    return <div style={{\n      backgroundColof:this.state.color,\n      border:\"3px solid whitesmoke\",\n      borderRadius:\"4px\",\n      width:\"16px\",\n      height:\"16px\",\n      float:\"right\"\n    }}></div>\n  }\n}\n\nexport default ColorPicker;","export const loadModel = model => ({\n  type: 'LOAD_MODEL',\n  model,\n  id:Date.now()\n});\n\nexport const loadVector = vector => ({\n  type: 'LOAD_VECTOR',\n  vector,\n  id:Date.now()\n})\n\nexport const setScene = scene => ({\n  type: 'SET_SCENE',\n  scene,\n  id:Date.now()\n})\n\nexport const setPlane = plane => ({\n  type: 'SET_PLANE',\n  plane,\n  id:Date.now()\n})\n\nexport const changeSection = section => ({\n  type: 'CHANGE_SECTION',\n  section\n})\n\nexport const setLayers = layers => ({\n  type: 'SET_LAYERS',\n  layers\n})\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React,{ useState,useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'rc-tree/assets/index.css';\nimport './LayerPanel.css';\nimport Tree, { TreeNode } from \"rc-tree\";\nimport ColorPicker from \"./layout/ColorPicker\";\nimport { SketchPicker } from 'react-color';\nimport { connect } from \"react-redux\";\nimport {changeSection} from \"../actions\";\n\n\n\nfunction LayerPanel (props) {\n  const { keys } = props;\n  const defaultExpandedKeys= keys;\n  const defaultSelectedKeys = [];\n  const defaultCheckedKeys = keys\n\n  const onExpand = expandedKeys => {\n    console.log('onExpand', expandedKeys);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    const title = info.node.title.toLowerCase();\n    console.log('selected', selectedKeys, info);\n    props.changeSection(selectedKeys.length ? title : null)\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    console.log('onCheck', checkedKeys, info);\n  };\n\n  const onEdit = () => {\n    setTimeout(() => {\n    }, 0);\n  };\n\n  const onDel = e => {\n    if (!window.confirm('sure to delete?')) {\n      return;\n    }\n    e.stopPropagation();\n  };\n\n  const [layers,setLayers] = useState(props.layers)\n\n  useEffect(()=>{\n    setLayers(props.layers);\n  },[props.layers])\n  const customLabel = (\n      <span className=\"cus-label\">\n        <span>operations: </span>\n        <span style={{ color: 'blue' }} onClick={onEdit}>\n          Edit\n        </span>\n        &nbsp;\n        <label onClick={e => e.stopPropagation()}>\n          <input type=\"checkbox\" /> checked\n        </label>\n        &nbsp;\n        <span style={{ color: '#EB0000' }} onClick={onDel}>\n          Delete\n        </span>\n      </span>\n    );\n    \n\n    return (\n      <div style={{ margin: '0 20px' }}>\n        <Tree\n          className=\"myCls\"\n          showLine={true}\n          checkable={true}\n          multiple={false}\n          checkStrictly={true}\n          selectable={true}\n          defaultExpandAll={true}\n          onExpand={onExpand}\n          defaultSelectedKeys={defaultSelectedKeys}\n          defaultCheckedKeys={defaultCheckedKeys}\n          onSelect={onSelect}\n          onCheck={onCheck}\n          treeData={layers}\n        />\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeSection:section => dispatch(changeSection(section))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerPanel);\n","import React,{ useState,useEffect } from 'react';\nimport './ModelList.css';\nimport { connect } from \"react-redux\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {loadModel,changeSection} from \"../actions\";\n\n\nfunction ModelList(props) {\n  const [mode, setMode] = useState({});\n  const [position, setPosition] = useState(JSON.stringify({}));\n  const [scale, setScale] = useState(JSON.stringify({}));\n  const [rotation, setRotation] = useState(JSON.stringify({}));\n  const [vector, setVector] = useState({});\n\n  useEffect(()=>{\n    const newPosition = {}\n    const newRotation = {}\n    const newScale = {}\n    const newMode = {}\n    const newVector = {}\n    props.models.data.map(d=>{\n      newPosition[d.id] = position[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newRotation[d.id] = rotation[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newScale[d.id] = scale[d.id] || JSON.stringify({x:1,y:1,z:1});\n      newMode[d.id] = mode[d.id] || \"info\";\n      newVector[d.id] = vector[d.id] || 0;\n    })\n    setPosition(newPosition);\n    setRotation(newRotation);\n    setScale(newScale);\n    setMode(newMode);\n    setVector(newVector);\n  },[props.models.data])\n  const onChange = (func,id,oldState,value) => func({...oldState,[id]:value});\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <div className=\"row\">\n      {props.models.data.map(d=>(\n        <div className=\"col-md-6 col-sm-6 col-xs-12\">\n          <div className=\"model-item\">\n            {mode[d.id] === \"info\" ? (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"settings\")}> \n                          <i className=\"fas fa-cog\"></i>\n                        </span> ) : (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"info\")}> \n                          <i className=\"fas fa-arrow-right\"></i>\n                        </span>)}\n            \n            <div className=\"model-item-inner\">\n              {mode[d.id] === \"info\" ? (\n                <React.Fragment>\n                <div>id: {d.id}</div>\n              <div>name: {d.name}</div>\n              <div>size: {(d.size/1000/1000).toFixed(2)} Mb</div>\n              <button style ={{width:\"100%\"}}className=\"btn btn-light\" onClick={()=>{\n      \n                props.vectors.filter(v=>{\n                  return v.id == vector[d.id]\n                }\n                )[0].array[0].map(r=>{\n                  const mesh = d.mesh.clone();\n                  // const pos = JSON.parse(position[d.id]);\n                  // pos.x = Number(pos.x);\n                  // pos.y = Number(pos.y);\n                  // pos.z = Number(pos.z);\n                  const rot = JSON.parse(rotation[d.id]);\n                  rot.x = Number(rot.x);\n                  rot.y = Number(rot.y);\n                  rot.z = Number(rot.z);\n                  const sca = JSON.parse(scale[d.id]);\n                  sca.x = Number(sca.x);\n                  sca.y = Number(sca.y);\n                  sca.z = Number(sca.z);\n                  mesh.rotation.set(rot.x,rot.y,rot.z);\n                  mesh.scale.set(sca.x,sca.y,sca.z);\n                  mesh.position.set(...r);\n                  mesh.castShadow = true;\n                  mesh.receiveShadow = true;\n                  props.scene.add(mesh)\n                })\n                \n              }} >Add To Scene</button>\n                </React.Fragment>\n                ):(\n                <React.Fragment>\n                  <label>Rotation</label>\n                  <input onChange={e=>onChange(setRotation,d.id,rotation,e.target.value)} value={rotation[d.id]}/>\n                  <label>Scale</label>\n                  <input onChange={e=>onChange(setScale,d.id,scale,e.target.value)} value={scale[d.id]}/>\n                  <label>Position</label>\n                  {/*<input onChange={e=>onChange(setPosition,d.id,position,e.target.value)} value={position[d.id]}/>*/}\n                  <select onChange={e=> {\n                    onChange(setVector,d.id,vector,e.target.value)\n                  }}>\n                    <option value={0} selected={vector[d.id] == 0}>Select</option>\n                    {props.vectors.map(v=><option value={v.id} selected={vector[d.id] == v.id}>{v.name}</option>)}\n                  </select>\n                </React.Fragment>\n                )}\n              \n            </div>\n          </div>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n","import React,{ useState,useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\n\nfunction ModelList(props) {\n  const [vector, setVector] = useState(0);\n\n  const onChange = vectorId => setVector(vectorId);\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <select onChange={e=> {\n        // onChange(setVector,e.target.value)\n        const v = props.vectors.filter(vec => vec.id == e.target.value)[0].array[0];\n        // const newArray = [];\n        // v.map(a=>{newArray = newArray.concat(v)});\n        // geometry.setAttribute( 'position', new THREE.BufferAttribute( newArray, 3 ) );\n        // props.plane.geometry =\n        // const generateTerrain = (g) => {\n        //   const pos = g.getAttribute(\"position\");\n        //   const pa = pos.array;\n        //   const hVerts = g.parameters.width;\n        //   const wVerts = g.parameters.height;\n        //   for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n        //       pa[j] = 0;\n        //   }\n        //   pos.needsUpdate = true;\n        //   g.computeVertexNormals();\n        // };\n        var positions = props.plane.geometry.attributes.position.array;\n        var x, y, z, index;\n        x = y = z = index = 0;\n\n        for ( var i = 0, l = 100*100; i < l; i ++ ) {\n\n            index ++; \n            index ++; \n            positions[ index ++ ] = (((v[i] ||[])[2]) || 0)*0.01;\n\n        }\n        props.plane.geometry.attributes.position.needsUpdate = true;\n\n        var loader = new THREE.TextureLoader();\n          loader.crossOrigin = \"\";\n          loader.load('../assets/ground-texture.png',\n              function( texture ) {\n                const material = new THREE.MeshBasicMaterial({map: texture});\n                props.plane.material = material;\n                props.plane.material.needsUpdate = true;\n              },\n              function () {},  // onProgress function\n              function ( error ) { console.log( error ) } // onError function\n          );\n        \n        // world\n        // generateTerrain(props.plane.geometry);\n      }}>\n        <option value={0} selected={vector == 0}>Select</option>\n        {props.vectors.map(v=><option value={v.id} selected={vector == v.id}>{v.name}</option>)}\n      </select>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    plane: state.api.plane\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n","import React,{ useState,useEffect } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {loadVector,loadModel,changeSection,setScene,setLayers,setPlane} from \"../actions\";\nimport readXlsxFile from 'read-excel-file';\nimport * as XLSX from 'xlsx';\n\nimport ModelList from \"./ModelList\";\nimport Ground from \"./Ground\";\nModal.setAppElement('#root')\n\nfunction App(props) {\n  const allClasses = (name) => {\n    if(name === \"models\" ){\n      return <ModelList />\n    } else if(name === \"vertices\" ){\n      return <Ground />\n    } else {\n      return <span></span>;\n    }\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [files, setFiles] = useState([])\n  const [elements, setElements] = useState({\n    camera:{}, controls:{}, scene:{}, renderer:{},pointer:{}, partials:{},loaders:{},onWindowResize:()=>{}\n  })\n  const toggleModal = ()=>setModalOpen(!modalOpen);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n  const  loadModel = file => {\n    const {name,size} = file[0];\n    const {scene,loaders} = elements;\n    const loader = new loaders.FBXLoader();\n      loader.load2(file, object => {\n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        props.loadModel({name,size,object});\n        setModalOpen(!modalOpen);       \n        const newLayers = JSON.parse(JSON.stringify(props.layers));\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });\n  }\n  useEffect(()=>{\n      let {camera,controls,scene,renderer,pointer,partials,loaders} = elements;\n      const rendererContainer = document.getElementById(\"three-map\");\n      const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer);\n      props.setScene(newWorld.scene);\n      props.setPlane(newWorld.partials.plane);\n      setElements({...newWorld});\n  },[])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar expand=\"md\" className=\"navbar navbar-dark\">\n          <NavbarBrand href=\"/\"><div className=\"logo-container\"><div className=\"logo\"/>Mergin' Mode</div></NavbarBrand>\n          <NavbarToggler onClick={toggleMenu} />\n          <Collapse isOpen={menuOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  File\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick = {toggleModal}>\n                    <span>Import </span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>\n                <NavLink href=\"https://github.com/prieston/mergin_mode\" target=\"_blank\">\n                <i class=\"fab fa-github\"></i>\n                <span>GitHub</span>\n                </NavLink>\n            </NavbarText>\n          </Collapse>\n        </Navbar>\n      </header>\n      <main>\n      <SplitPane split=\"vertical\" minSize={50} maxSize={-50} defaultSize={\"20%\"} onChange={elements.onWindowResize}>\n        <LayerPanel />\n        <SplitPane split=\"horizontal\" minSize={50} maxSize={-50} defaultSize={\"80%\"} onChange={elements.onWindowResize}>\n          <div id = \"three-map\" />\n          {props.section!== null && allClasses(props.section)}\n        </SplitPane>\n      </SplitPane>\n        \n\n      </main>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={()=>setModalOpen(!modalOpen)}\n      >\n        <div className=\"container form\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <input className=\"form-control\" type=\"file\" onChange={e => {\n              setFiles([...e.target.files]);\n            }}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-primary form-control\" onClick={()=>{\n                const extention = files[0].name.split(\".\")[files[0].name.split(\".\").length - 1];\n                const vectorExt = [\"xlsx\",\"xls\",\"ods\",\"csv\",\"xyz\"];\n                if (vectorExt.indexOf(extention) > -1) {\n                  const reader = new FileReader();\n                  const rows= [];\n                  reader.onload = (evt) => { // evt = on_file_select event\n                      /* Parse data */\n                      const bstr = evt.target.result;\n                      const wb = XLSX.read(bstr, {type:'binary'});\n                      /* Get first worksheet */\n                      const wsname = wb.SheetNames[0];\n                      const ws = wb.Sheets[wsname];\n                      /* Convert array of arrays */\n                      const data = XLSX.utils.sheet_to_csv(ws, {header:1});\n                      /* Update state */\n                      rows.push(data.split(\"\\n\").map(v=>v.split(\",\").filter(v=>v.length > 0).map(n=>Number(n))));\n                  };\n                  reader.readAsBinaryString(files[0]);\n                  setModalOpen(!modalOpen);       \n                  const {name,size} = files[0];\n                  const newLayers = JSON.parse(JSON.stringify(props.layers));\n                  newLayers[1].children[2].children.push({ key: `1-2-${newLayers[1].children[2].children.length}`, title: name, checkable:false,selectable:false})\n                  props.setLayers(newLayers);  \n                  props.loadVector({name,size,array:rows});\n                 \n                } else {\n                  loadModel(files);\n                }\n              }}>Load</button>\n            </div>\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-secondary form-control\" onClick={toggleModal}>Close</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    section:state.api.section.active,\n    title:state.api.section.title,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    loadVector:vector =>dispatch(loadVector(vector)),\n    changeSection:section => dispatch(changeSection(section)),\n    setScene:scene => dispatch(setScene(scene)),\n    setPlane:plane => dispatch(setPlane(plane)),\n    setLayers:layers => dispatch(setLayers(layers)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nconst initialState = {\n\tlayers:[\n\t  {\n\t    key: '0',\n\t    title: 'Models',\n\t    checkable:false,\n\t    selectable:true,\n\t    children: [\n\n\t    ],\n\t  },\n\t  {\n\t    key: '1',\n\t    title: 'Scene',\n\t    checkable:false,\n\t    selectable:false,\n\t    children: [\n\t      {\n\t        key: '1-0',\n\t        title: 'Background',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: [\n\t        { key: '1-0-0', title: 'Color'},\n\t        { key: '1-0-1', title: 'Image' },\n\t        { key: '1-0-2', title: 'Video' }\n\t      ] },\n\t      {\n\t        key: '1-1',\n\t        title: 'Ground',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: [\n\t          { key: '1-1-0', title: 'Color'},\n\t          { key: '1-1-1', title: 'Image' },\n\t          { key: '1-1-2', title: 'Vertices' },\n\t        ],\n\t      },\n\t      {\n\t        key: '1-2',\n\t        title: 'Vector Layers',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t      {\n\t        key: '1-3',\n\t        title: 'Model Layers',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t    ],\n\t  },\n\t],\n\tscene:{\t},\n\tplane:{\t},\n\tmodels:{\n\t\tdata:[]\n\t},\n\tvectors:{\n\t\tdata:[]\n\t},\n\tsection:{\n\t\tactive:null,\n\t\ttitle:null\n\t}\n};\n\nconst titles= {\n\tmodels:\"Models\"\n};\n\nconst api = (state = initialState, action) => {\n  switch (action.type) {\n  \tcase \"LOAD_MODEL\":\n\t  \treturn Object.assign({},state, {\n\t  \t\tmodels: Object.assign({},state.models,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.models.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:[action.id],\n\t  \t\t\t\t\tmesh:action.model.object,\n\t  \t\t\t\t\tname:action.model.name,\n\t  \t\t\t\t\tsize:action.model.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\tcase \"LOAD_VECTOR\":\n\t  \treturn Object.assign({},state, {\n\t  \t\tvectors: Object.assign({},state.vectors,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.vectors.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:[action.id],\n\t  \t\t\t\t\tarray:action.vector.array,\n\t  \t\t\t\t\tname:action.vector.name,\n\t  \t\t\t\t\tsize:action.vector.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n  \tcase \"CHANGE_SECTION\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tsection:Object.assign({},state.section,{\n\t  \t\t\tactive:action.section,\n\t  \t\t\ttitle:titles[action.section] || null\n\t  \t\t})\n\t  \t});\n\tcase \"SET_SCENE\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tscene:action.scene,\n\t  \t});\n\tcase \"SET_PLANE\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tplane:action.plane,\n\t  \t});\n\tcase \"SET_LAYERS\":\n\t\treturn Object.assign( {},state,{\n\t\t\tlayers: action.layers\n\t  \t});\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  api\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\n\nconst rootElement = document.getElementById('root');\n\nconst loggerMiddleware = createLogger({\n  // ...options\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunkMiddleware , loggerMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}