{"version":3,"sources":["components/layout/DropZone.js","helpers/ThemeliodiProblimata.js","helpers/computeZ.js","helpers/createWorld.js","helpers/CalculateDeltaPosition.js","components/layout/ColorPicker.js","actions/index.js","components/LayerPanel.js","components/ModelList.js","components/Background.js","components/Ground.js","components/layout/Slider.js","components/Images.js","components/Color.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["MyDropzone","props","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","useState","fileName","setFileName","className","onChange","e","console","log","target","files","Array","prototype","slice","call","map","file","name","join","href","ThemeliodesProblima_1","Xa","Ya","Sab","Gab","Xb","Math","sin","Yb","cos","calculateSab","absDX","abs","absDY","sqrt","pow","Number","toFixed","ThemeliodesProblima_2","DX","DY","theta","atan","posZ","positionX","positionY","dem","length","axeX","axeY","intX","floor","intY","restX","restY","axeZ","dXZ","ipotinousaX","restX_new","IpotinousaDiagwniou2","minIpotinousaX","slopeX","finalDXZ","heightX","dYZ","ipotinousaY","restY_new","IpotinousaDiagwniou1","minIpotinousaY","slopeY","finalDYZ","heightY","percent","FHeight1","FHeight2","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","setModelRuntimeInfo","showCoords","FBXLoader","GLTFLoader","clock","THREE","raycaster","mouse","host","document","getElementById","axesHost","AxesScene","background","antialias","alpha","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","clientWidth","clientHeight","renderer2","appendChild","domElement","position","set","up","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","PI","camera2","lookAt","controls2","enablePan","enableZoom","update","g","pos","getAttribute","pa","array","j","i","needsUpdate","computeVertexNormals","generateTerrain","geometry","material","color","side","flatShading","plane","castShadow","receiveShadow","add","gridHelper","rotateX","light","axesHelper","crossOrigin","opacity","transparent","alphaTest","sky","onWindowResize","aspect","updateProjectionMatrix","rotation","animate","requestAnimationFrame","delta","getDelta","mergin_mode","mixers","modelLayer","model","mesh","x","y","z","runtimeInfo","animating","activeRow","activeRowData","vectors","data","filter","v","id","vectorId","xStart","yStart","Za","posXY","newZ","CalculateDeltaPosition","newX","newY","newSab","Infinity","newActiveRow","axisZ","rotateOnWorldAxis","startActiveRow","render","addEventListener","event","el","getBoundingClientRect","left","top","clientX","clientY","setFromCamera","intersects","intersectObject","face","normal","copy","point","posX","posY","load2","callback","scope","this","reader","FileReader","onload","readyState","status","parse","result","responseText","readAsArrayBuffer","ColorPicker","keys","state","clicked","style","backgroundColof","border","borderRadius","width","height","float","React","Component","defaultProps","loadModel","type","Date","now","setPlane","changeSection","section","setLayers","layers","setModelLayer","layer","toggleLayer","visible","split","sublayer","backgroundColor","addModel","options","d","scale","vector","theVector","toLowerCase","includes","startAnimation","SkeletonUtils","clone","animations","push","children","rot","JSON","sca","axisX","axisY","new_mesh","InstancedGroupMesh","transform","frustumCulled","random","randomXY","randomZ","updateMatrix","setMatrixAt","matrix","r","traverse","node","isMesh","meshes","newLayers","skinnedMesh","animationName","clip","findByName","clipAction","play","key","title","checkable","selectable","loadGround","vecId","dispatch","getState","api","vec","index","positions","attributes","l","min","max","loader","load","texture","error","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","coords","connect","defaultCheckedKeys","useEffect","onClick","setTimeout","stopPropagation","confirm","margin","showLine","multiple","checkStrictly","defaultExpandAll","onExpand","expandedKeys","defaultSelectedKeys","onSelect","selectedKeys","info","onCheck","checkedKeys","checked","treeData","models","mode","setMode","stringify","setPosition","setScale","setRotation","setVector","newPosition","newRotation","newScale","newMode","newVector","func","oldState","value","Fragment","size","selected","Slider","centerMode","centerSlidePercentage","emulateTouch","slides","slide","src","legend","groundColor","setBackgroundColor","setGroundColor","setColor","hex","Modal","setAppElement","active","loadVector","setScene","setSky","diffX","diffY","innerHTML","loadDemo","url","then","newState","m","modelId","menuOpen","setMenuOpen","modalOpen","setModalOpen","setFiles","elements","setElements","toggleModal","loadGLTFModel","resolve","dracoLoader","DRACOLoader","setDRACOLoader","gltf","object","loadFBXModel","child","newWorld","f","theFiles","Promise","reject","extention","indexOf","fetch","res","text","rows","icon","catch","all","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","n","readAsBinaryString","Navbar","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavItem","NavLink","NavbarText","minSize","maxSize","defaultSize","Ground","onRequestClose","DropZone","Boolean","location","hostname","match","initialState","titles","combineReducers","action","Object","assign","rootElement","loggerMiddleware","createLogger","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3fb2b00.chunk.js","sourcesContent":["import React, {useCallback,useState} from 'react'\nimport {useDropzone} from 'react-dropzone'\n \nfunction MyDropzone(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n  const onChange = (e) => {\n    console.log(e.target.files)\n    setFileName(Array.prototype.slice.call(e.target.files).map(file=>file.name).join(\", \") || \"\");\n    props.onChange(e)\n  }\n  const [fileName,setFileName] = useState(\"\");\n  return (\n    <div className=\"mm-dropzone\" {...getRootProps()} >\n      <input {...getInputProps()} onChange={onChange} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n      <p><a href=\"#\">{fileName}</a></p>\n    </div>\n  )\n}\nexport default MyDropzone;","export const ThemeliodesProblima_1 = (Xa,Ya,Sab,Gab) => {\n\t//1rad=63.6619772367581grads\n\tconst Xb = Xa + Sab*Math.sin(Gab/63.6619772367581);\n\tconst Yb = Ya + Sab*Math.cos(Gab/63.6619772367581);\n\treturn {Xb:Xb , Yb:Yb};\n}\nexport const calculateSab = (Xa,Ya,Xb,Yb) => {\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\treturn Number(Sab.toFixed(4));\n}\nexport const ThemeliodesProblima_2 = (Xa,Ya,Xb,Yb) => {\n\t\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\tvar DX = Xb-Xa;\n\tvar DY = Yb-Ya;\n\tvar theta =Math.atan((absDX/absDY))*63.6619772367581; //http://www.translatorscafe.com/cafe/EN/units-converter/angle/2-3/radian-grad/\n\tif (DX>0 && DY>0){\n\t\tvar Gab = theta;\n\t}\n\tif (DX>0 && DY<0){\n\t\tvar Gab = 200 - theta;\n\t}\n\tif (DX<0 && DY<0){\n\t\tvar Gab = 200 + theta;\n\t}\n\tif (DX<0 && DY>0){\n\t\tvar Gab = 400 - theta;\n\t}\n\tif (DX==0 && DY>0){\n\t\tvar Gab = 0;\n\t}\n\tif (DX==0 && DY<0){\n\t\tvar Gab = 200;\n\t}\n\tif (DX>0 && DY==0){\n\t\tvar Gab = 100;\n\t}\n\tif (DX<0 && DY==0){\n\t\tvar Gab = 300;\n\t}\n\tif (DX==0 && DY==0){\n\t\tvar Gab = 0;\n\t}\n\t//Gab = Gab/63.6619772367581;\n\treturn {Gab:Gab.toFixed(4) , Sab:Sab.toFixed(4)}\n}","import {calculateSab} from \"./ThemeliodiProblimata\";\nconst Xmin = -50;\nconst Ymin = -50;\nconst Xmax = 50;\nconst Ymax = 50;\nconst XZStep=100/99;\nconst YZStep=100/99;\nconst zScale = 150;\nconst zShift = 0;\nconst DemWidth = 100;\n\nexport const posZ=(positionX,positionY,dem) =>{\n\tif (dem.length == 0) {\n\t\treturn 0;\n\t}\n\tvar axeX=(calculateSab(0,positionX,0,Xmin)/XZStep).toFixed(4) - 0;\n\tvar axeY=(calculateSab(0,positionY,0,Ymax)/YZStep).toFixed(4) - 0;\n\tvar intX=Math.floor(axeX);\n\tvar intY=Math.floor(axeY);\n\tvar restX=axeX-intX;\n\tvar restY=axeY-intY;\n\t// var positionAtpoligon = (restX+restY)/2;\n\tif(restX == 0 && restY == 0){\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\treturn Number(dem[axeZ][2].toFixed(4))\n\t}\n\tif (restX<=1-restY){\n\t//check X axis\n\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\t// console.log(axeZ);\n\t\tif (!dem[axeZ] || !dem[axeZ + 1]) return 0;\n\t\tvar dXZ=dem[axeZ][2] - dem[axeZ+1][2];\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=restX+restY;\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow(restY*YZStep,2)+Math.pow(restY*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*restX_new;\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\t\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t//check Y axis\n\t\t\n\t\tif (!dem[axeZ] || !dem[axeZ + DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ+DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=restY+restX;\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow(restX*XZStep,2)+Math.pow(restX*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*restY_new;\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ = minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\t}\n\telse{\n\t//check X axis\n\t\tvar axeZ=((intY+1)*DemWidth)+intX+1;//calculate height\n\t\t// console.log(axeZ)\n\t\tif (!dem[axeZ] || !dem[axeZ-1]) return 0;\n\t\tvar dXZ=(dem[axeZ][2] - dem[axeZ-1][2]);\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=(1-restX)+(1-restY);\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow((1-restY)*YZStep,2)+Math.pow((1-restY)*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*(restX_new);\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t\t//check Y axis\n\t\tif (!dem[axeZ] || !dem[axeZ-DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ-DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=(1-restY)+(1-restX);\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow((1-restX)*XZStep,2)+Math.pow((1-restX)*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*(restY_new);\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ= minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\n\t}\n\t// console.log(FHeight2)\n\treturn Number(FHeight2.toFixed(4));\n}\n","import * as THREE from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {CalculateDeltaPosition} from \"./CalculateDeltaPosition\";\nimport {calculateSab} from \"./ThemeliodiProblimata\";\n        // var modelName = \"models/gltf/\" + model.name + \".glb\";\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n    \n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            scope.parse(event.target.result || event.target.responseText,\"\",callback);\n            // if (callback)\n            //     callback(gltf);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n    reader.readAsArrayBuffer(file);\n\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer, mixer,setModelRuntimeInfo,showCoords) {\n      loaders.FBXLoader = FBXLoader;\n    \tloaders.GLTFLoader = GLTFLoader;\n    \tvar clock = new THREE.Clock();\n      var raycaster = new THREE.Raycaster();\n      var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n        const axesHost = document.getElementById(\"axes-helper\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n        const AxesScene = new THREE.Scene();\n        scene.background = new THREE.Color( 0x000000 );\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 0 );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n\n        const renderer2 = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer2.setPixelRatio( window.devicePixelRatio );\n        renderer2.setClearColor( 0x000000, 0 )\n        renderer2.setSize( axesHost.clientWidth, axesHost.clientHeight );\n\n\n        host.appendChild( renderer.domElement );\n        axesHost.appendChild( renderer2.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        // camera = new THREE.OrthographicCamera( host.clientWidth/-2,host.clientWidth/2,host.clientHeight/2,host.clientHeight/-2, 1, 10000 );\n        camera.position.set( 80, 80, 80 );\n        camera.up.set(0,0,1);\n\n        // controls = new TrackballControls( camera, renderer.domElement );\n        controls = new OrbitControls( camera, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 1;\n        controls.maxDistance = 1000;\n        controls.maxPolarAngle = Math.PI / 2;\n\n        \n\n        const camera2 = new THREE.PerspectiveCamera( 60, axesHost.clientWidth / axesHost.clientHeight, 1, 10000 );\n        // const camera2 = new THREE.OrthographicCamera( axesHost.clientWidth/-2,axesHost.clientWidth/2,axesHost.clientHeight/2,axesHost.clientHeight/-2, 1, 10000 );\n        // camera2.position.sub( camera.position,controls2.target );\n        camera2.position.set(6,6,6);\n        camera2.lookAt( AxesScene.position );\n\n        const controls2 = new OrbitControls( camera2, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls2.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls2.dampingFactor = 0.05;\n        controls2.screenSpacePanning = false;\n        controls2.maxPolarAngle = Math.PI / 2;\n        controls2.enablePan = false;\n        controls2.enableZoom = false;\n        controls2.update();\n\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 99, 99 );\n\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = true;\n        plane.receiveShadow = true;\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n        \n        var gridHelper = new THREE.GridHelper( 10000, 1000 );\n        gridHelper.geometry.rotateX( Math.PI / 2 );\n        scene.add( gridHelper );\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        var light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( 1, 1, 100 );\n        // light.shadow = {\n        //   camera: {\n        //     near: 0.5,\n        //     far: 300,\n        //     left: -50,\n        //     bottom: -50,\n        //     right: 50,\n        //     top: 50\n        //   },\n        //   bias: 0.0001,\n        //   mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        // };\n        scene.add( light );\n        var light = new THREE.AmbientLight( 0xffffff ); // soft white light\n        scene.add( light );\n        \n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );\n\n        var axesHelper = new THREE.AxesHelper( 5 );\n        AxesScene.add( axesHelper );\n        \n        // var light = new THREE.DirectionalLight( 0x002288 );\n        // light.position.set( - 0, - 0, - 100 );\n        // scene.add( light );\n\n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );        \n\n        // var light = new THREE.AmbientLight( 0x666666 );\n        // scene.add( light );\n\n\n        var geometry = new THREE.SphereGeometry( .5, 32, 32 );\n        var material = new THREE.MeshBasicMaterial( {color: \"red\"} );\n        pointer = new THREE.Mesh( geometry, material );\n        // scene.add( pointer );\n\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var loader = new THREE.TextureLoader();\n        loader.crossOrigin = \"\";\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var material = new THREE.MeshBasicMaterial({opacity: 0,\n          transparent: true,\n          alphaTest: 0.05,\n          side: THREE.DoubleSide\n        });\n        const sky = new THREE.Mesh( geometry, material );\n        sky.rotation.set(Math.PI/2,0,0)\n        scene.add(sky);\n\n        // loader.load(src,\n        //       function( texture ) {\n        //         sky.rotation.set(Math.PI/2,0,0)\n        //         sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n        //         sky.material.needsUpdate = true;\n        //         // props.scene.add(props.sky)  \n        //       },\n        //       function () {},  // onProgress function\n        //       function ( error ) { console.log( error ) } // onError function\n        //   );\n    \n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n        function onMouseMove( event ) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        const el = document.getElementById(\"three-map\").getBoundingClientRect()\n        const left = el.left;\n        const top = el.top;\n        mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n        mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        // See if the ray from the camera into the world hits one of our meshes\n        var intersects = raycaster.intersectObject( plane );\n\n        // Toggle rotation bool for meshes that we clicked\n        if ( intersects.length > 0 ) {\n\n          pointer.position.set( 0, 0, 0 );\n          pointer.lookAt( intersects[ 0 ].face.normal );\n\n          pointer.position.copy( intersects[ 0 ].point );\n          const posX = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( pointer.position.x - -50,2) ) / 100;\n          const posY = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( -50 - pointer.position.y,2) ) / 100;\n          const posZ = Math.sqrt(Math.pow(0 - 0,2) + Math.pow( 0 - pointer.position.z,2) );\n          showCoords(posX,posY,posZ);\n          window.array = window.array || \"\";\n          window.array += `${pointer.position.x.toFixed(4)},${pointer.position.y.toFixed(4)},${pointer.position.z.toFixed(4)}\\n`\n        }\n\n\n      }\n      function onWindowResize() {\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        camera2.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n        // setTimeout( function() {\n        requestAnimationFrame( animate );\n        // }, 1000 / 60 );\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        controls2.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n\n      function render() {\n        var delta = clock.getDelta();\n\n        for ( var i = 0; i < window.mergin_mode.mixers.length; ++ i ) {\n\n          window.mergin_mode.mixers[ i ].update( delta );\n\n        }\n        window.mergin_mode.modelLayer.map(model => {\n          const {x,y,z} = model.mesh.position;\n          const {animating,activeRow} = model.runtimeInfo;\n          const activeRowData = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow];\n          const xStart = activeRowData[0];\n          const yStart = activeRowData[1];\n          const zStart = activeRowData[2];\n          const Gab = activeRowData[3];\n          const Sab = activeRowData[4];\n          if(\n            animating &&\n            typeof x !== \"undefined\" &&\n            typeof y !== \"undefined\" &&\n            typeof z !== \"undefined\"\n            ) {\n            const dem =window.mergin_mode.plane.dem;\n            const {x:newX,y:newY,z:newZ} = CalculateDeltaPosition(Number(x.toFixed(4)),Number(y.toFixed(4)),Number(z.toFixed(4)),Gab,delta,dem);\n            let newSab = calculateSab(xStart,yStart,x,y);\n            if(newSab === Infinity){\n              newSab = 0\n            }\n            if(newSab < Sab){\n              model.mesh.position.set(newX,newY,newZ)  \n            } else {\n              const newActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow + 1];\n              if(!newActiveRow) {\n                  const startActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][0];\n\n                  model.mesh.position.set(startActiveRow[0],startActiveRow[1],startActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:false,activeRow:0})\n              } else {\n                  model.mesh.position.set(newActiveRow[0],newActiveRow[1],newActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:activeRow + 1})\n                  // model.mesh.rotation.set(model.mesh.rotation.x,model.mesh.rotation.y,newActiveRow[3]/63.6619772367581)\n                  // model.mesh.rotation.y = (-newActiveRow[3] + 200)/63.6619772367581\n                  // const axisX = new Vector3(1, 0, 0);\n                  // const axisY = new Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  // mesh.rotateOnWorldAxis(axisX, rot.x);\n                  // mesh.rotateOnWorldAxis(axisY, rot.y);\n                  model.mesh.rotateOnWorldAxis(axisZ, -(400 - activeRowData[3] + newActiveRow[3])/63.6619772367581);\n              }\n            }\n            \n          }\n        })\n        renderer.render( scene, camera );\n        renderer2.render( AxesScene, camera2 );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      document.getElementById(\"three-map\").addEventListener( 'mousemove', onMouseMove, false );\n\n      partials = {plane,pointer,sky,gridHelper};\n      return {camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n} ","import {ThemeliodesProblima_1} from \"./ThemeliodiProblimata\";\nimport {posZ} from \"./computeZ\";\n\nexport const CalculateDeltaPosition = (Xa,Ya,Za,Gab,delta,dem) => {\n\tconst Sab = delta*1.2; //distance in meters per second (50km/h)\n\tlet posXY = ThemeliodesProblima_1(Xa,Ya,Sab,Gab);\n\tconst newZ =posZ(posXY.Xb,posXY.Yb,dem);\n \t// const DZ = posZ(posXY.Xb,posXY.Yb,dem)-Za;\n\t// const DZ = 0;\n\t// if(DZ<0 || DZ >0) {\n\t// \tconst slope = DZ/Sab;\n\t// \tconst slopeRadians = Math.atan(slope);\n\t// \tconst SabNew = Math.abs(Sab*Math.cos(slopeRadians));\n\t// \tposXY = ThemeliodesProblima_1(Xa,Ya,SabNew,Gab);\n\t// }\n\n\t// const PxPosition = UserCoordinatesXY(posXY.Xb,posXY.Yb);\n\t\n\treturn {x:posXY.Xb , y:posXY.Yb , z:newZ};\n}\n\nexport const CalculateDeltaRotation = (Xa,Ya,Za,Xb,Yb,Zb,Gab,Sab,rotX,rotY) => {\n\tvar DZ = Zb-Za;\n\tvar XYkathetis = ThemeliodesProblima_1(Xb,Yb,Sab,Gab+100);\n\tvar Xkathetis =XYkathetis.Xb;\n\tvar Ykathetis =XYkathetis.Yb;\n\tvar Zkathetis = posZ(Xkathetis,Ykathetis);\n\tvar DZkathetis = Zb-Zkathetis;\n\t\n\tvar RotationX = 0;\n\tvar RotationY =0;\n\t\n\tif(DZ<0 || DZ >0){\n\t\tRotationX = Math.atan(DZ/Sab) ;\n\t\tRotationY = Math.atan(DZkathetis/Sab) ;\n\t}\n\n\tvar DRotationX=rotX-RotationX;\n\tvar DRotationY=rotY-RotationY;\n\t\n\treturn {\n\t\tx:Number(DRotationX),\n\t\ty:Number(DRotationY)\n\t};\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  static propTypes = {\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n    const { keys } = props;\n    this.state = {\n      clicked: false,\n      color:\"#000\"\n    };\n\n  }\n\n  render() {\n    if(this.state.clicked) {\n      return <SketchPicker />\n    }\n    return <div style={{\n      backgroundColof:this.state.color,\n      border:\"3px solid whitesmoke\",\n      borderRadius:\"4px\",\n      width:\"16px\",\n      height:\"16px\",\n      float:\"right\"\n    }}></div>\n  }\n}\n\nexport default ColorPicker;","import * as THREE from 'three';\nimport { SkeletonUtils } from 'three/examples/jsm/utils/SkeletonUtils.js';\nimport InstancedGroupMesh from \"three-instanced-group-mesh\";\n\nexport const loadModel = model => ({\n  type: 'LOAD_MODEL',\n  model,\n  id:Date.now()\n});\n\nexport const loadVector = vector => ({\n  type: 'LOAD_VECTOR',\n  vector,\n  id:Date.now()\n})\n\nexport const setScene = scene => ({\n  type: 'SET_SCENE',\n  scene,\n  id:Date.now()\n})\n\nexport const setPlane = plane => ({\n  type: 'SET_PLANE',\n  plane,\n  id:Date.now()\n})\nexport const setSky = sky => ({\n  type: 'SET_SKY',\n  sky,\n  id:Date.now()\n})\nexport const setBackgroundColor = color => ({\n  type: 'SET_BACKGROUND_COLOR',\n  color\n});\nexport const setGroundColor = color => ({\n  type: 'SET_GROUND_COLOR',\n  color\n});\n\nexport const changeSection = section => ({\n  type: 'CHANGE_SECTION',\n  section\n})\n\nexport const setLayers = layers => ({\n  type: 'SET_LAYERS',\n  layers\n})\n\nexport const setModelLayer = layer => ({\n  type: 'SET_MODEL_LAYER',\n  layer\n})\n\nexport const setModelRuntimeInfo = (modelId,info) => ({\n  type: 'SET_MODEL_RUNTIME_INFO',\n    modelId,\n  runtimeInfo:{\n    ...info\n  }\n})\n\nexport const toggleLayer = (data,visible) => {\n  // console.log(visible)\n  const layer = data.name.split(\"-\")[0]\n  const sublayer = data.name.split(\"-\")[1]\n  if(layer === \"background\"){\n   if (sublayer === \"color\") {\n    data.scene.background = visible ? new THREE.Color(  data.backgroundColor ) : null;\n   }\n   else if (sublayer === \"image\") {\n    data.sky.visible = visible;\n   }\n   else if (sublayer === \"video\") {}\n  } else if(layer === \"ground\"){\n    if(sublayer == \"grid\") {\n      data.gridHelper.visible = visible;\n\n    }\n    // data.plane.visible = visible;\n    \n  }  else if(layer === \"models\"){\n    \n  } else if(layer === \"vectors\"){\n    \n  }\n}\n\nexport const showCoords = (x,y,z) => {\n  return (dispatch,getState) => {\n    const coords = getState().api.plane.coords;\n    // console.log(coords)\n    const diffX = coords.max.x - coords.min.x;\n    const diffY = coords.max.y - coords.min.y;\n    document.getElementById(\"coords\").innerHTML = `${(x*diffX + coords.min.x).toFixed(2)}, ${(y*diffY + coords.min.y).toFixed(2)},${(coords.min.z + z).toFixed(2)}`;\n  \n  }\n}\n\nexport const addModel = (options, props)=> {\n  const {d, scale,rotation,vector} = options;\n    const theVector = props.vectors.filter(v=>{\n      return v.id == vector[d.id]\n    }\n    )[0];\n    if(!theVector) {\n      return false;\n    }\n    if (theVector.name.toLowerCase().includes(\"anime\")){\n      let mesh;\n      if(d.name.toLowerCase().includes(\"glb\") || d.name.toLowerCase().includes(\"gltf\")){\n        mesh = SkeletonUtils.clone( d.mesh.scene );\n        var mixer = startAnimation( mesh, d.mesh.animations, \"Take 001\" );\n        window.mergin_mode.mixers.push(mixer)\n      } else {\n        mesh = d.mesh.clone();\n        var mixer = startAnimation( mesh.children[0], d.mesh.animations, \"Take 001\" );\n        window.mergin_mode.mixers.push(mixer)\n\n      }\n      const rot = JSON.parse(rotation[d.id]);\n      rot.x = Number(rot.x);\n      rot.y = Number(rot.y);\n      rot.z = Number(rot.z);\n      const sca = JSON.parse(scale[d.id]);\n      sca.x = Number(sca.x);\n      sca.y = Number(sca.y);\n      sca.z = Number(sca.z);\n      // mesh.rotation.set(rot.x,rot.y,rot.z);\n      const axisX = new THREE.Vector3(1, 0, 0);\n      const axisY = new THREE.Vector3(0, 1, 0);\n      const axisZ = new THREE.Vector3(0, 0, 1);\n      mesh.rotateOnWorldAxis(axisX, rot.x);\n      mesh.rotateOnWorldAxis(axisY, rot.y);\n      // mesh.rotateOnWorldAxis(axisZ, rot.z);\n      mesh.rotateOnWorldAxis(axisZ, (-theVector.array[0][0][3] )/63.6619772367581);\n      // mesh.rotation.z = ((theVector.array[0][0][3])/63.6619772367581);\n\n      mesh.scale.set(sca.x,sca.y,sca.z);\n      mesh.position.set(...theVector.array[0][0]);\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      props.scene.add(mesh);\n      props.setModelLayer({\n        id:Date.now(),\n        vectorId:theVector.id,\n        runtimeInfo:{animating:true,activeRow:0},\n        mesh\n      });\n  } else {\n\n     let mesh;\n      if(d.name.toLowerCase().includes(\"glb\") || d.name.toLowerCase().includes(\"gltf\")){\n      mesh = SkeletonUtils.clone( d.mesh.scene );\n\n      } else {\n        mesh = d.mesh.clone();\n      }\n\n      if(theVector.array[0].length > 2) {\n        \n              let new_mesh = new InstancedGroupMesh( mesh, theVector.array[0].length);\n              // console.log(theVector.array[0].length)\n              for ( var i = 0; i < theVector.array[0].length - 1; i ++ ) {\n                var transform = new THREE.Object3D();\n                transform.frustumCulled = false;\n                const rot = JSON.parse(rotation[d.id]);\n                rot.x = Number(rot.x);\n                rot.y = Number(rot.y);\n                rot.z = Number(rot.z);\n                const axisX = new THREE.Vector3(1, 0, 0);\n                const axisY = new THREE.Vector3(0, 1, 0);\n                const axisZ = new THREE.Vector3(0, 0, 1);\n                transform.rotateOnWorldAxis(axisX, rot.x);\n                transform.rotateOnWorldAxis(axisY, rot.y);\n                transform.rotateOnWorldAxis(axisZ, Math.random()*2*Math.PI);\n\n                const randomXY = Math.random() * 0.1;\n                const randomZ = Math.random() * 0.1 + 0.05;\n                const sca = JSON.parse(scale[d.id]);\n                sca.x = Number(sca.x) + randomXY;\n                sca.y = Number(sca.y) + randomXY;\n                sca.z = Number(sca.z) + randomZ;\n                transform.scale.set(sca.x,sca.y,sca.z);\n                transform.position.set( ...theVector.array[0][i] );\n                transform.updateMatrix();\n\n                new_mesh.setMatrixAt( i, transform.matrix );\n\n            }\n\n            props.scene.add( new_mesh )\n      } else {\n\n        theVector.array[0].map(r=>{\n         if(r.length == 0) {return false;}\n         if(theVector.name.includes(\"new\")) {\n            mesh.traverse(function (node){\n            if (node.isMesh) {\n              node.material.transparent = true;\n              node.material.opacity = 0.7;\n              node.material.needsUpdate = true;\n            }})\n         } else {\n           // var modifier = new SimplifyModifier();\n            mesh.traverse(function (node){\n            if (node.isMesh) {\n              node.material.transparent = true;\n              node.material.opacity = 0.9;\n              node.material.needsUpdate = true;\n            }})\n         }\n          \n          // const pos = JSON.parse(position[d.id]);\n          // pos.x = Number(pos.x);\n          // pos.y = Number(pos.y);\n          // pos.z = Number(pos.z);\n          const rot = JSON.parse(rotation[d.id]);\n          rot.x = Number(rot.x);\n          rot.y = Number(rot.y);\n          rot.z = Number(rot.z);\n          const axisX = new THREE.Vector3(1, 0, 0);\n          const axisY = new THREE.Vector3(0, 1, 0);\n          const axisZ = new THREE.Vector3(0, 0, 1);\n          mesh.rotateOnWorldAxis(axisX, rot.x);\n          mesh.rotateOnWorldAxis(axisY, rot.y);\n          mesh.rotateOnWorldAxis(axisZ, rot.z);\n          // mesh.rotateOnWorldAxis(axisZ, ( )/63.6619772367581);\n\n          const sca = JSON.parse(scale[d.id]);\n          sca.x = Number(sca.x);\n          sca.y = Number(sca.y);\n          sca.z = Number(sca.z);\n          mesh.rotation.set(rot.x,rot.y,rot.z);\n\n          mesh.scale.set(sca.x,sca.y,sca.z);\n        \n          mesh.position.set(...r);\n          mesh.castShadow = true;\n          mesh.receiveShadow = true;\n          // if(theVector.name.includes(\"loutro\")){\n          //   mesh.traverse(function (node){\n          //   if (node.isMesh) {\n          //     if(node.material.map && node.geometry.boundingBox){\n          //       node.material.map.wrapS = THREE.RepeatWrapping;\n          //       node.material.map.wrapT = THREE.RepeatWrapping;\n          //       const p1 = node.geometry.boundingBox.min;\n          //       const p2 = node.geometry.boundingBox.max;\n          //       const d = parseInt(Math.sqrt(Math.pow(p1.x - p2.x,2) + Math.pow(p1.y - p2.y,2) + Math.pow(p1.z - p2.z,2)));\n          //       node.material.map.repeat.set( d,d );\n          //     }\n          //   }})\n          // }\n          window.meshes = window.meshes || []\n          window.meshes.push (mesh);\n          props.scene.add(mesh)\n        });\n      }\n  }\n  const newLayers = [...props.layers];\n  newLayers[1].children[3].children.push({ key: `1-3-${newLayers[1].children[3].children.length}`, title: d.name + \"_\" + theVector.name, checkable:true,selectable:false})\n  props.setLayers(newLayers);\n  \n\n  function startAnimation( skinnedMesh, animations, animationName ) {\n\n        var mixer = new THREE.AnimationMixer( skinnedMesh );\n        var clip = THREE.AnimationClip.findByName( animations, animationName );\n\n        if ( clip ) {\n\n          var action = mixer.clipAction( clip );\n          action.play();\n\n        }\n\n        return mixer;\n\n      }\n}\n\nexport const loadDemo =  function(props,load){\n  return (dispatch, getState) => {\n    const urls = [\n      {name:\"loutro-old.glb\",size:\"0\",url:\"demo/loutro-old.glb\"},\n      {name:\"tree-green.fbx\",size:\"0\",url:\"demo/tree-green.fbx\"},\n      {name:\"tree-red.fbx\",size:\"0\",url:\"demo/tree-red.fbx\"},\n      {name:\"loutro-new.gltf\",size:\"0\",url:\"demo/loutro-new.gltf\"},\n      {name:\"loutro-old.csv\",size:\"0\",url:process.env.PUBLIC_URL + \"/demo/loutro-old.csv\"},\n      {name:\"loutro-new.csv\",size:\"0\",url:process.env.PUBLIC_URL + \"/demo/loutro-new.csv\"},\n      {name:\"trees-green.csv\",size:\"0\",url:process.env.PUBLIC_URL + \"/demo/trees-green.csv\"},\n      {name:\"trees-red.csv\",size:\"0\",url:process.env.PUBLIC_URL + \"/demo/trees-red.csv\"},\n      {name:\"dtm.csv\",size:\"0\",url:process.env.PUBLIC_URL + \"/demo/dtm.csv\"},\n    ]\n\n    load(urls).then(()=>{\n      //all loaded\n      const newState = getState();\n      let d, vector, rotation, scale;\n\n      //load trees green\n      d = newState.api.models.data.filter(m=>m.name === \"tree-green.fbx\")[0];\n      vector = {[d.id]:newState.api.vectors.data.filter(m=>m.name === \"trees-green.csv\")[0].id};\n      rotation = {[d.id]:JSON.stringify({x:1.57,y:0,z:0})}\n      scale = {[d.id]:JSON.stringify({x:0.1,y:0.1,z:0.1})}\n      \n      props.addModel({d, scale,rotation,vector},{\n        ...props,\n        section:newState.api.section.active,\n        title:newState.api.section.title,\n        layers:newState.api.layers,\n        vectors: newState.api.vectors.data,\n        modelLayer:newState.api.modelLayer,\n        coords:newState.api.plane.coords,\n        state:newState.api,\n        scene:newState.api.scene\n      })\n\n      //load trees red\n      d = newState.api.models.data.filter(m=>m.name === \"tree-red.fbx\")[0];\n      vector = {[d.id]:newState.api.vectors.data.filter(m=>m.name === \"trees-red.csv\")[0].id};\n      rotation = {[d.id]:JSON.stringify({x:1.57,y:0,z:0})}\n      scale = {[d.id]:JSON.stringify({x:0.1,y:0.1,z:0.1})}\n      \n      props.addModel({d, scale,rotation,vector},{\n        ...props,\n        section:newState.api.section.active,\n        title:newState.api.section.title,\n        layers:newState.api.layers,\n        vectors: newState.api.vectors.data,\n        modelLayer:newState.api.modelLayer,\n        coords:newState.api.plane.coords,\n        state:newState.api,\n        scene:newState.api.scene\n      })\n\n      //add sky\n      var loader = new THREE.TextureLoader();\n      loader.crossOrigin = \"\";\n      loader.load(\"../assets/fantasy.jpg\",\n            function( texture ) {\n              newState.api.sky.mesh.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n              newState.api.sky.mesh.material.needsUpdate = true;\n              // props.scene.add(props.sky)  \n            },\n            function () {},  // onProgress function\n            function ( error ) { console.log( error ) } // onError function\n        );\n      // add ground\n      props.loadGround(newState.api.vectors.data.filter(m=>m.name === \"dtm.csv\")[0].id,props)\n      \n      //load loutro old\n      d = newState.api.models.data.filter(m=>m.name === \"loutro-old.glb\")[0];\n      vector = {[d.id]:newState.api.vectors.data.filter(m=>m.name === \"loutro-old.csv\")[0].id};\n      rotation = {[d.id]:JSON.stringify({x:1.57,y:0,z:0})}\n      scale = {[d.id]:JSON.stringify({x:1.1,y:1.1,z:1.1})}\n      \n      props.addModel({d, scale,rotation,vector},{\n        ...props,\n        section:newState.api.section.active,\n        title:newState.api.section.title,\n        layers:newState.api.layers,\n        vectors: newState.api.vectors.data,\n        modelLayer:newState.api.modelLayer,\n        coords:newState.api.plane.coords,\n        state:newState.api,\n        scene:newState.api.scene\n      })\n\n      //load loutro new\n      d = newState.api.models.data.filter(m=>m.name === \"loutro-new.gltf\")[0];\n      vector = {[d.id]:newState.api.vectors.data.filter(m=>m.name === \"loutro-new.csv\")[0].id};\n      rotation = {[d.id]:JSON.stringify({x:1.57,y:0,z:0})}\n      scale = {[d.id]:JSON.stringify({x:11,y:11,z:11})}\n      \n      props.addModel({d, scale,rotation,vector},{\n        ...props,\n        section:newState.api.section.active,\n        title:newState.api.section.title,\n        layers:newState.api.layers,\n        vectors: newState.api.vectors.data,\n        modelLayer:newState.api.modelLayer,\n        coords:newState.api.plane.coords,\n        state:newState.api,\n        scene:newState.api.scene\n      })\n\n    });\n  }\n}\nexport const loadGround = (vecId)=>{\n  return (dispatch,getState)=> {\n    const state = getState();\n    const props = {\n      vectors:state.api.vectors.data,\n      plane:state.api.plane.mesh,\n    }\n\n    let v = props.vectors.filter(vec => vec.id == vecId)[0]\n        if(!v) {return false;}\n        v = v.array[0];\n        var positions = props.plane.geometry.attributes.position.array;\n        var x, y, z, index;\n        x = y = z = index = 0;\n        let l = v.length - 2;\n        let min = {x:Number(v[0][0]),y:Number(v[0][1]),z:Number(v[0][2])};\n        let max = {x:Number(v[l][0]),y:Number(v[l][1]),z:Number(v[l][2])};\n\n        for ( var i = 0; i <= l; i ++ ) {\n            index ++; \n            index ++;\n            positions[ index ++ ] = (((v[i] ||[])[2]) || 0) - 50;\n            if (min.z>Number(v[i][2])){\n              min.z = Number(v[i][2]);\n            }\n            if(max.z < Number(v[i][2])){\n              max.z = Number(v[i][2])\n            }\n        }\n        props.plane.geometry.attributes.position.needsUpdate = true;\n        var loader = new THREE.TextureLoader();\n          loader.crossOrigin = \"\";\n          loader.load('../assets/cropped.png',\n              function( texture ) {\n                const material = new THREE.MeshBasicMaterial({map: texture});\n                props.plane.material = material;\n                props.plane.material.needsUpdate = true;\n              },\n              function () {},  // onProgress function\n              function ( error ) { console.log( error ) } // onError function\n          );\n        \n        var material = new THREE.MeshPhongMaterial( {\n            color: \"#000\",\n            polygonOffset: true,\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\n            polygonOffsetUnits: 1\n        } );\n        props.plane.material = material;\n        props.plane.material.needsUpdate = true;\n\n        // var geo = new THREE.EdgesGeometry( props.plane.geometry ); // or WireframeGeometry\n        // var mat = new THREE.LineBasicMaterial( { color: 0x999999, linewidth: 2 } );\n        // var wireframe = new THREE.LineSegments( geo, mat );\n        // props.plane.add( wireframe );\n        const array = v;\n        const coords = {min,max};\n        dispatch(setPlane({dem:array,coords}));\n  }\n\n        \n\n      }\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React,{ useState,useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'rc-tree/assets/index.css';\nimport './LayerPanel.css';\nimport Tree, { TreeNode } from \"rc-tree\";\nimport ColorPicker from \"./layout/ColorPicker\";\nimport { SketchPicker } from 'react-color';\nimport { connect } from \"react-redux\";\nimport {changeSection,toggleLayer} from \"../actions\";\n\n\n\nfunction LayerPanel (props) {\n  const { keys } = props;\n  const defaultExpandedKeys= keys;\n  const defaultSelectedKeys = [];\n  const defaultCheckedKeys = keys\n\n  const onExpand = expandedKeys => {\n    console.log('onExpand', expandedKeys);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    const title = info.node.key;\n    console.log('selected', selectedKeys, info);\n    props.changeSection(selectedKeys.length ? title : null)\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    console.log('onCheck', checkedKeys, info);\n\n    toggleLayer({\n      name:info.node.key,\n      ...props\n    },info.checked);\n  };\n\n  const onEdit = () => {\n    setTimeout(() => {\n    }, 0);\n  };\n\n  const onDel = e => {\n    if (!window.confirm('sure to delete?')) {\n      return;\n    }\n    e.stopPropagation();\n  };\n\n  const [layers,setLayers] = useState(props.layers)\n\n  useEffect(()=>{\n    setLayers(props.layers);\n  },[props.layers])\n  const customLabel = (\n      <span className=\"cus-label\">\n        <span>operations: </span>\n        <span style={{ color: 'blue' }} onClick={onEdit}>\n          Edit\n        </span>\n        &nbsp;\n        <label onClick={e => e.stopPropagation()}>\n          <input type=\"checkbox\" /> checked\n        </label>\n        &nbsp;\n        <span style={{ color: '#EB0000' }} onClick={onDel}>\n          Delete\n        </span>\n      </span>\n    );\n    \n\n    return (\n      <div className=\"layers-panel\" style={{ margin: '0 20px' }}>\n        <Tree\n          className=\"myCls\"\n          showLine={true}\n          checkable={true}\n          multiple={false}\n          checkStrictly={true}\n          selectable={true}\n          defaultExpandAll={true}\n          onExpand={onExpand}\n          defaultSelectedKeys={defaultSelectedKeys}\n          defaultCheckedKeys={defaultCheckedKeys}\n          onSelect={onSelect}\n          onCheck={onCheck}\n          treeData={layers}\n        />\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    layers:state.api.layers,\n    scene:state.api.scene,\n    sky:state.api.sky.mesh,\n    gridHelper:state.api.plane.gridHelper,\n    backgroundColor:state.api.background.color,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeSection:section => dispatch(changeSection(section)),\n    toggleLayer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerPanel);\n","import React,{ useState,useEffect } from 'react';\nimport './ModelList.css';\nimport { connect } from \"react-redux\";\n\n// import { SimplifyModifier } from 'three/examples/jsm/modifiers/SimplifyModifier.js';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {loadModel,changeSection,setModelLayer,setLayers,addModel} from \"../actions\";\n\n\nfunction ModelList(props) {\n  const [mode, setMode] = useState({});\n  const [position, setPosition] = useState(JSON.stringify({}));\n  const [scale, setScale] = useState(JSON.stringify({}));\n  const [rotation, setRotation] = useState(JSON.stringify({}));\n  const [vector, setVector] = useState({});\n\n  useEffect(()=>{\n    const newPosition = {}\n    const newRotation = {}\n    const newScale = {}\n    const newMode = {}\n    const newVector = {}\n    props.models.data.map(d=>{\n      newPosition[d.id] = position[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newRotation[d.id] = rotation[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newScale[d.id] = scale[d.id] || JSON.stringify({x:1,y:1,z:1});\n      newMode[d.id] = mode[d.id] || \"info\";\n      newVector[d.id] = vector[d.id] || 0;\n    })\n    setPosition(newPosition);\n    setRotation(newRotation);\n    setScale(newScale);\n    setMode(newMode);\n    setVector(newVector);\n  },[props.models.data])\n  const onChange = (func,id,oldState,value) => func({...oldState,[id]:value});\n  \n  return (\n    <div className=\"ModelList container\">\n      <div className=\"row\">\n      {props.models.data.map(d=>(\n        <div className=\"col-md-6 col-sm-6 col-xs-12\">\n          <div className=\"model-item\">\n            {mode[d.id] === \"info\" ? (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"settings\")}> \n                          <i className=\"fas fa-cog\"></i>\n                        </span> ) : (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"info\")}> \n                          <i className=\"fas fa-arrow-right\"></i>\n                        </span>)}\n            \n              {mode[d.id] === \"info\" ? (\n                <React.Fragment>\n                <div className=\"mm-form-block\">\n                  <div>id: {d.id}</div>\n                  <div>name: {d.name}</div>\n                  <div>size: {(d.size/1000/1000).toFixed(2)} Mb</div>\n                </div>\n                \n                <button className=\"mm-btn\" onClick={e=>props.addModel({d, scale,rotation,vector},props)} >Add To Scene</button>\n                </React.Fragment>\n                ):(\n                <React.Fragment>\n                  <label>Rotation</label>\n                  <input onChange={e=>onChange(setRotation,d.id,rotation,e.target.value)} value={rotation[d.id]}/>\n                  <label>Scale</label>\n                  <input onChange={e=>onChange(setScale,d.id,scale,e.target.value)} value={scale[d.id]}/>\n                  <label>Position</label>\n                  {/*<input onChange={e=>onChange(setPosition,d.id,position,e.target.value)} value={position[d.id]}/>*/}\n                  <select onChange={e=> {\n                    onChange(setVector,d.id,vector,e.target.value)\n                  }}>\n                    <option value={0} selected={vector[d.id] == 0}>Select</option>\n                    {props.vectors.map(v=><option value={v.id} selected={vector[d.id] == v.id}>{v.name}</option>)}\n                  </select>\n                </React.Fragment>\n                )}\n              \n          </div>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers)),\n    addModel: (options,props) => addModel(options,props)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n\n","import React,{ useState,useEffect } from 'react';\n// import './Background.css';\nimport { connect } from \"react-redux\";\n\nimport {loadModel,changeSection,setModelLayer,setLayers} from \"../actions\";\n\n\nfunction Background(props) {\n \n\n  return (\n    <div className=\"Background container\">\n      <div className=\"row\">\n      Background\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Background);\n\n","import React,{ useState,useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport {setPlane,loadGround} from \"../actions/index\";\nfunction ModelList(props) {\n  const [vector, setVector] = useState(0);\n\n  \n  const onChange = vectorId => setVector(vectorId);\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <select onChange={e=>{ props.loadGround(e.target.value,props)}}>\n        <option value={0} selected={vector == 0}>Select</option>\n        {props.vectors.map(v=><option value={v.id} selected={vector == v.id}>{v.name}</option>)}\n      </select>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    plane: state.api.plane.mesh,\n    coords:state.api.plane.coords\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPlane: (array,coords) => dispatch(setPlane({dem:array,coords})),\n    loadGround: (vecId) => dispatch(loadGround(vecId)),\n\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n \nexport default function Slider (props) {\n    const onClick = (e,src) => {\n        e.stopPropagation();\n        props.onClick(src)\n    }\n        return (\n            <Carousel centerMode centerSlidePercentage={33} emulateTouch>\n                {\n                    props.slides.map(slide=>{\n                        return (\n                            <div>\n                                <img src={slide.src} className=\"mm-image mm-slider-img\"/>\n                                <p className=\"legend mm-btn\" onClick={e=>onClick(e,slide.src)}>Use {slide.legend}</p>\n                            </div>\n                        )\n                    })\n                }\n                \n\n            </Carousel>\n        );\n};","import React,{ useState,useEffect } from 'react';\n// import './Images.css';\n\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport Slider from './layout/Slider';\n\nimport {loadModel,changeSection,setModelLayer,setLayers} from \"../actions\";\n\n\nfunction Images(props) {\n  return (\n    <div className=\"Images container\">\n      <div className=\"row\">\n        <Slider \n          onClick={src=>{\n\n            if(src === \"../assets/banned.png\") {\n              props.sky.material = new THREE.MeshBasicMaterial({opacity: 0,\n                transparent: true,\n                alphaTest: 0.05,\n                side: THREE.DoubleSide\n              });\n              props.sky.material.needsUpdate = true;\n              return true;\n            }\n            var loader = new THREE.TextureLoader();\n            loader.crossOrigin = \"\";\n            loader.load(src,\n                  function( texture ) {\n                    props.sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n                    props.sky.material.needsUpdate = true;\n                    // props.scene.add(props.sky)  \n                  },\n                  function () {},  // onProgress function\n                  function ( error ) { console.log( error ) } // onError function\n              );\n          }}\n          slides={[\n            {src:\"../assets/banned.png\",legend:\"No Image\"},\n            {src:\"../assets/sky.jpg\",legend:\"Sky\"},\n            {src:\"../assets/night-sky.jpg\",legend:\"Night Sky\"},\n            {src:\"../assets/fantasy.jpg\",legend:\"Fantasy Sky\"},\n            ]}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    sky:state.api.sky.mesh,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Images);\n\n","import React,{ useState,useEffect } from 'react';\n// import './Color.css';\n\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport { ChromePicker } from 'react-color';\n\nimport {loadModel,changeSection,setModelLayer,setLayers,setBackgroundColor,setGroundColor} from \"../actions\";\n\n\nfunction Color(props) {\n  const [color,setColor] = useState(props.type === \"background\" ? props.backgroundColor : props.groundColor);\n  useEffect(()=>setColor(props.type === \"background\" ? props.backgroundColor : props.groundColor),[props.type]);\n\n  const handleComplete = color => {\n    setColor(color.hex);\n    if(props.type === \"background\") {\n      props.setBackgroundColor(color.hex);\n      props.scene.background = new THREE.Color( color.hex );  \n    } else {\n      props.setGroundColor(color.hex);\n      props.plane.material.color = new THREE.Color( color.hex );  \n    }\n    \n  };\n\n  return (\n    <div className=\"Color container\">\n      <div className=\"row\">\n        <ChromePicker \n        color={color}\n        onChange={handleComplete}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    plane:state.api.plane.mesh,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers,\n    backgroundColor:state.api.background.color,\n    groundColor:state.api.plane.color,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers)),\n    setBackgroundColor: color => dispatch(setBackgroundColor(color)),\n    setGroundColor: color => dispatch(setGroundColor(color)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Color);\n\n","import React,{ useState,useEffect } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\n// import {loadModels, addModels} from \"../helpers/demo\";\nimport DropZone from \"./layout/DropZone\";\nimport {ThemeliodesProblima_2} from \"../helpers/ThemeliodiProblimata\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {setModelRuntimeInfo,loadVector,loadModel,changeSection,setScene,setLayers,setPlane,setSky,showCoords,addModel,loadDemo,loadGround} from \"../actions\";\nimport readXlsxFile from 'read-excel-file';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport * as XLSX from 'xlsx';\n\nimport ModelList from \"./ModelList\";\nimport Background from \"./Background\";\nimport Ground from \"./Ground\";\nimport Images from \"./Images\";\nimport Color from \"./Color\";\nModal.setAppElement('#root')\n\nfunction App(props) {\n  const allClasses = (name) => {\n    if(name === \"models\" ){\n      return <ModelList />\n    } else if(name === \"background\" ){\n      return <Background />\n    } \n    else if(name === \"background-color\" ){\n      return <Color type=\"background\"/>\n    }\n    else if(name === \"background-image\" ){\n      return <Images type=\"background\"/>\n    }\n    else if(name === \"ground-color\" ){\n      return <Color type=\"ground\"/>\n    }\n    else if(name === \"ground-image\" ){\n      return <Images type=\"ground\" />\n    }\n     else if(name === \"ground-vertices\" ){\n      return <Ground />\n    } else {\n      return <span></span>;\n    }\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [files, setFiles] = useState([])\n  const [elements, setElements] = useState({\n    mixers:[], camera:{}, controls:{}, scene:{}, renderer:{},pointer:{}, partials:{},loaders:{},onWindowResize:()=>{}\n  })\n  const toggleModal = ()=>setModalOpen(!modalOpen);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n\n  const  loadGLTFModel = (file,resolve) => {\n    const {name,size,url} = file[0];\n    const {scene,loaders} = elements;\n\n    const loader = new loaders.GLTFLoader();\n    var dracoLoader = new DRACOLoader();\n    loader.setDRACOLoader( dracoLoader );\n    if(url) {\n      loader.load(url, gltf => {\n         // var scene = gltf.scene;\n\n          // model.animations = gltf.animations;\n          // model.scene = scene;\n\n          // Enable Shadows\n\n          gltf.scene.traverse( function ( object ) {\n\n            if ( object.isMesh ) {\n\n              object.castShadow = true;\n\n            }\n\n          } );\n        props.loadModel({name,size,object:gltf});\n        setModalOpen(false);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n        resolve(true);\n\n      });\n    } else {\n      loader.load2(file, gltf => {\n         // var scene = gltf.scene;\n\n          // model.animations = gltf.animations;\n          // model.scene = scene;\n\n          // Enable Shadows\n\n          gltf.scene.traverse( function ( object ) {\n\n            if ( object.isMesh ) {\n\n              object.castShadow = true;\n\n            }\n\n          } );\n        props.loadModel({name,size,object:gltf});\n        setModalOpen(false);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });  \n    }\n    \n  }   \n  const  loadFBXModel = (file,resolve) => {\n    const {name,size,url} = file[0];\n    const {scene,loaders} = elements;\n    const loader = new loaders.FBXLoader();\n    if (url) {\n      loader.load(url, object => {\n        // if(object.animations.length > 0) {\n        //   elements.mixer = new THREE.AnimationMixer( object );\n        //   var action = elements.mixer.clipAction( object.animations[ 0 ] );\n        //   action.play();  \n        // }\n        \n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        props.loadModel({name,size,object});\n        setModalOpen(false);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n        resolve(true);\n\n      });\n    } else {\n      loader.load2(file, object => {\n        // if(object.animations.length > 0) {\n        //   elements.mixer = new THREE.AnimationMixer( object );\n        //   var action = elements.mixer.clipAction( object.animations[ 0 ] );\n        //   action.play();  \n        // }\n        \n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        props.loadModel({name,size,object});\n        setModalOpen(false);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });  \n    }\n  }\n  useEffect(()=>{\n      let {mixers,camera,controls,scene,renderer,pointer,partials,loaders} = elements;\n      const rendererContainer = document.getElementById(\"three-map\");\n      const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer,mixers,props.setModelRuntimeInfo,props.showCoords);\n      props.setScene(newWorld.scene);\n      props.setPlane({id:Date.now(),mesh:newWorld.partials.plane,gridHelper:newWorld.partials.gridHelper});\n      props.setSky({id:Date.now(),mesh:newWorld.partials.sky});\n      setElements({...newWorld});\n  },[]);\n\n  const load = (f = []) => {\n      const pa = [];\n      const theFiles = f.length > 0 ? f : Array.prototype.slice.call(files); \n      if(theFiles.length == 0) {return  false;}\n\n      if(f.length > 0) {\n        theFiles.map(file=>{\n          pa.push(new Promise( (resolve,reject) => {\n            const extention = file.name.split(\".\")[file.name.split(\".\").length - 1].toLowerCase();\n            const vectorExt = [\"xlsx\",\"xls\",\"ods\",\"csv\",\"xyz\"];\n\n            if (vectorExt.indexOf(extention) > -1) {\n              fetch(file.url)\n                .then(res => res.text())\n                .then( (result) => {\n                  const rows = [result.split(\"\\n\").map(v=>v.split(\",\"))];\n                  rows[0][rows[0].length - 1] = [];\n                    const {name,size} = file;\n                    const newLayers = [...props.layers];\n                    newLayers[1].children[2].children.push({ key: `1-2-${newLayers[1].children[2].children.length}`, title: name, checkable:true,selectable:false,icon:<span></span>})\n                    props.setLayers(newLayers);\n                    if(name.includes(\"anime\")){\n                      for(let i=0;i< rows[0].length - 1;i++) {\n                        const Xa = rows[0][i][0]; \n                        const Ya = rows[0][i][1];\n                        const Xb = (rows[0][i + 1] || [])[0] || 0; \n                        const Yb = (rows[0][i + 1] || [])[1] || 0; \n                        const {Gab,Sab} = ThemeliodesProblima_2(Xa,Ya,Xb,Yb)\n                        rows[0][i][3] = Number(Gab);\n                        rows[0][i][4] = Number(Sab);\n                      }\n                      props.loadVector({name,size,array:rows});\n                    } else {\n                      props.loadVector({name,size,array:rows});\n                    }\n                    resolve(true);\n                  })\n                .catch(e=> {\n                  resolve(true)\n                  console.log(e)\n                })\n            } else if(extention == \"fbx\") {\n              loadFBXModel([file],resolve);\n            } else if (extention === \"glb\" || extention === \"gltf\") {\n              loadGLTFModel([file],resolve);\n            }\n          }))\n        })\n        return Promise.all(pa)\n\n      } else {\n        theFiles.map(file=>{\n          const extention = file.name.split(\".\")[file.name.split(\".\").length - 1].toLowerCase();\n          const vectorExt = [\"xlsx\",\"xls\",\"ods\",\"csv\",\"xyz\"];\n          if (vectorExt.indexOf(extention) > -1) {\n            const reader = new FileReader();\n            const rows= [];\n            reader.onload = (evt) => { // evt = on_file_select event\n              /* Parse data */\n              const bstr = evt.target.result;\n              const wb = XLSX.read(bstr, {type:'binary'});\n              /* Get first worksheet */\n              const wsname = wb.SheetNames[0];\n              const ws = wb.Sheets[wsname];\n              /* Convert array of arrays */\n              const data = XLSX.utils.sheet_to_csv(ws, {header:1});\n              /* Update state */\n              rows.push(data.split(\"\\n\").map(v=>v.split(\",\").filter(v=>v.length > 0).map(n=>Number(n))));\n\n              const {name,size} = file;\n              const newLayers = [...props.layers];\n              newLayers[1].children[2].children.push({ key: `1-2-${newLayers[1].children[2].children.length}`, title: name, checkable:true,selectable:false,icon:<span></span>})\n              props.setLayers(newLayers);\n              if(name.includes(\"anime\")){\n                for(let i=0;i< rows[0].length - 1;i++) {\n                  const Xa = rows[0][i][0]; \n                  const Ya = rows[0][i][1];\n                  const Xb = (rows[0][i + 1] || [])[0] || 0; \n                  const Yb = (rows[0][i + 1] || [])[1] || 0; \n                  const {Gab,Sab} = ThemeliodesProblima_2(Xa,Ya,Xb,Yb)\n                  rows[0][i][3] = Number(Gab);\n                  rows[0][i][4] = Number(Sab);\n                }\n                props.loadVector({name,size,array:rows});\n              } else {\n                props.loadVector({name,size,array:rows});\n              }\n            };\n            reader.readAsBinaryString(file);\n            setModalOpen(false);       \n            \n           \n          } else if(extention == \"fbx\") {\n            loadFBXModel([file]);\n          } else if (extention === \"glb\" || extention === \"gltf\") {\n            loadGLTFModel([file]);\n          }\n        })\n        setFiles([])\n      }\n  }\n                \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar expand=\"md\" className=\"navbar navbar-dark\">\n          <NavbarBrand href=\"#\"><div className=\"logo-container\"><div className=\"logo\"/></div></NavbarBrand>\n          <NavbarToggler onClick={toggleMenu} />\n          <Collapse isOpen={menuOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  File\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick = {toggleModal}>\n                    <span>Import </span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <NavItem>\n                <NavLink onClick={()=>props.loadDemo(props,load)}>Load Demo</NavLink>\n            </NavItem>\n            </Nav>\n            <NavbarText>\n                <NavLink href=\"https://github.com/prieston/mergin_mode\" target=\"_blank\">\n                <i className=\"fab fa-github\"></i>\n                <span>GitHub</span>\n                </NavLink>\n            </NavbarText>\n          </Collapse>\n        </Navbar>\n      </header>\n      <main>\n      <SplitPane split=\"vertical\" minSize={50} maxSize={-50} defaultSize={\"40%\"} onChange={elements.onWindowResize}>\n        <LayerPanel keys={[\"background-color\",\"background-image\",\"ground-grid\",\"ground-color\"]} />\n        <SplitPane split=\"horizontal\" minSize={50} maxSize={-50} defaultSize={\"60%\"} onChange={elements.onWindowResize}>\n          <div id = \"three-map\" >\n            <div id=\"axes-helper\"></div>\n            <div id=\"info-helper\">\n              <div id=\"epsg\">EPSG: 32634</div>\n              <div id=\"coords\"></div>\n            </div>\n          </div>\n          {(props.section!== null && allClasses(props.section)) || <span></span>}\n        </SplitPane>\n      </SplitPane>\n        \n\n      </main>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={()=>setModalOpen(!modalOpen)}\n      >\n        <div className=\"container form\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <DropZone onChange={e => {\n                setFiles([...e.target.files]);\n              }} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-primary form-control\" onClick={load}>Load</button>\n            </div>\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-secondary form-control\" onClick={toggleModal}>Close</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n    \n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    section:state.api.section.active,\n    title:state.api.section.title,\n    layers:state.api.layers,\n    vectors: state.api.vectors,\n    modelLayer:state.api.modelLayer,\n    coords:state.api.plane.coords,\n    state:state.api\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    loadVector:vector =>dispatch(loadVector(vector)),\n    changeSection:section => dispatch(changeSection(section)),\n    setScene:scene => dispatch(setScene(scene)),\n    setPlane:plane => dispatch(setPlane(plane)),\n    setSky:sky => dispatch(setSky(sky)),\n    setLayers:layers => dispatch(setLayers(layers)),\n    showCoords:(x,y,z) => dispatch(showCoords(x,y,z)),\n    addModel: (options,props) => addModel(options,props),\n    loadDemo: (props,load) => dispatch(loadDemo(props,load)),\n    loadGround: (vecId,props) => dispatch(loadGround(vecId,props)),\n    setModelRuntimeInfo:(modelId,info) => dispatch(setModelRuntimeInfo(modelId,info))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component }  from 'react';\nimport { combineReducers } from 'redux'\nwindow.mergin_mode = {\n\tmodelLayer: [],\n\tvectors:[],\n\tplane:{},\n\tsky:{},\n\tmixers:[]\n}\nconst initialState = {\n\tlayers:[\n\t  {\n\t    key: 'models',\n\t    title: 'Models',\n\t    checkable:false,\n\t    selectable:true,\n\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t    children: [\n\t    ],\n\t  },\n\t  {\n\t    key: 'scene',\n\t    title: 'Scene',\n\t    checkable:false,\n\t    selectable:false,\n\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t    children: [\n\t      {\n\t        key: 'background',\n\t        title: 'Background',\n\t        checkable:false,\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        children: [\n\t        { key: 'background-color', title: 'Color',icon:<span className=\"layer-icon\"><i className=\"fas fa-palette\"></i></span>},\n\t        { key: 'background-image', title: 'Image',icon:<span className=\"layer-icon\"><i className=\"far fa-file-image\"></i></span> },\n\t        { key: 'background-video', title: 'Video',icon:<span className=\"layer-icon\"><i className=\"far fa-file-video\"></i></span> }\n\t      ] },\n\t      {\n\t        key: 'ground',\n\t        title: 'Ground',\n\t        checkable:false,\n   \t\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n   \t\t    // switcherIcon:<span className=\"layer-icon switch-icon\"><i className=\"fas fa-chevron-right\"></i></span>,\n\n\t        selectable:false,\n\t        children: [\n\t          { key: 'ground-color', title: 'Color',icon:<span className=\"layer-icon\"><i className=\"fas fa-palette\"></i></span>},\n\t          { key: 'ground-image', title: 'Image' ,icon:<span className=\"layer-icon\"><i className=\"far fa-file-image\"></i></span>},\n\t          { key: 'ground-vertices', title: 'Vertices' ,icon:<span className=\"layer-icon\"><i className=\"fas fa-mountain\"></i></span>},\n\t          { key: 'ground-grid', title: 'Grid' ,icon:<span className=\"layer-icon\"><i className=\"fab fa-slack-hash\"></i></span>}\n\t        ],\n\t      },\n\t      {\n\t        key: 'vector-layers',\n\t        title: 'Vector Layers',\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t      {\n\t        key: 'model-layers',\n\t        title: 'Model Layers',\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t    ],\n\t  },\n\t],\n\tscene:{\t},\n\tplane:{\n\t\tid:null,\n\t\tmesh:{},\n\t\tdem:[],\n\t\tcoords:{min:{x:-50,y:-50,z:0},max:{x:50,y:50,z:0}},\n\t\tcolor:\"#222\",\n\t\tgridHelper:{}\n\t},\n\tsky:{\n\t\tid:null,\n\t\tmesh:{}\n\t},\n\tbackground:{\n\t\tcolor:\"#000\"\n\t},\n\tmodels:{\n\t\tdata:[]\n\t},\n\tvectors:{\n\t\tdata:[]\n\t},\n\tmodelLayer:[],\n\tsection:{\n\t\tactive:null,\n\t\ttitle:null\n\t}\n};\n\nconst titles= {\n\tmodels:\"Models\"\n};\n\nconst api = (state = initialState, action) => {\n  switch (action.type) {\n  \tcase \"LOAD_MODEL\":\n\t  \treturn Object.assign({},state, {\n\t  \t\tmodels: Object.assign({},state.models,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.models.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tmesh:action.model.object,\n\t  \t\t\t\t\tname:action.model.name,\n\t  \t\t\t\t\tsize:action.model.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\tcase \"LOAD_VECTOR\":{\n\n\t\tconst newState = Object.assign({},state, {\n\t  \t\tvectors: Object.assign({},state.vectors,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.vectors.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tarray:action.vector.array,\n\t  \t\t\t\t\tname:action.vector.name,\n\t  \t\t\t\t\tsize:action.vector.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\t  \twindow.mergin_mode.vectors = newState.vectors;\n\t  \treturn newState; \n\t}\n  \tcase \"CHANGE_SECTION\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tsection:Object.assign({},state.section,{\n\t  \t\t\tactive:action.section,\n\t  \t\t\ttitle:titles[action.section] || null\n\t  \t\t})\n\t  \t});\n\tcase \"SET_SCENE\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tscene:action.scene,\n\t  \t});\n\tcase \"SET_PLANE\":\n\t  \tconst newState = Object.assign({},state,{\n\t  \t\tplane:{...state.plane,...action.plane},\n\t  \t});\n\t  \twindow.mergin_mode.plane = newState.plane;\n\t  \treturn newState;\n\tcase \"SET_SKY\":{\n\t\t  \tconst newState = Object.assign({},state,{\n\t\t  \t\tsky:{...state.sky,...action.sky},\n\t\t  \t});\n\t\t  \twindow.mergin_mode.sky = newState.sky;\n\t\t  \treturn newState;}\n\tcase \"SET_LAYERS\":\n\t\treturn Object.assign( {},state,{\n\t\t\tlayers: action.layers\n\t  \t});\n\tcase \"SET_BACKGROUND_COLOR\":\n\t\treturn Object.assign( {},state,{\n\t\t\tbackground: {color:action.color}\n\t  \t});\n\tcase \"SET_GROUND_COLOR\":\n\t\treturn Object.assign( {},state,{\n\t\t\tplane: {...state.plane,color:action.color}\n\t  \t});\n\tcase \"SET_MODEL_LAYER\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer, action.layer]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n\tcase \"SET_MODEL_RUNTIME_INFO\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer.map(m=>{\n\t\t\t\t// console.log(m.id,action.modelId)\n\t\t\t\tif(m.id == action.modelId){\n\t\t\t\t\tm.runtimeInfo = action.runtimeInfo\n\t\t\t\t};\n\t\t\t\treturn m;\n\t\t\t})]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  api\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\n\nconst rootElement = document.getElementById('root');\n\nconst loggerMiddleware = createLogger({\n  // ...options\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunkMiddleware , loggerMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}