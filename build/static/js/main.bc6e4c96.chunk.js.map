{"version":3,"sources":["helpers/ThemeliodiProblimata.js","helpers/computeZ.js","helpers/createWorld.js","helpers/CalculateDeltaPosition.js","components/layout/ColorPicker.js","actions/index.js","components/LayerPanel.js","components/ModelList.js","components/Ground.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["ThemeliodesProblima_1","Xa","Ya","Sab","Gab","Xb","Math","sin","Yb","cos","calculateSab","absDX","abs","absDY","sqrt","pow","Number","toFixed","ThemeliodesProblima_2","DX","DY","theta","atan","posZ","positionX","positionY","dem","length","axeX","axeY","intX","floor","intY","restX","restY","axeZ","console","log","dXZ","ipotinousaX","restX_new","IpotinousaDiagwniou2","minIpotinousaX","slopeX","finalDXZ","heightX","dYZ","ipotinousaY","restY_new","IpotinousaDiagwniou1","minIpotinousaY","slopeY","finalDYZ","heightY","percent","FHeight1","FHeight2","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","setModelRuntimeInfo","FBXLoader","GLTFLoader","clock","THREE","raycaster","mouse","host","document","getElementById","background","antialias","setPixelRatio","window","devicePixelRatio","setSize","clientWidth","clientHeight","shadowMap","enabled","appendChild","domElement","position","set","up","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","PI","g","pos","getAttribute","pa","array","j","i","needsUpdate","computeVertexNormals","generateTerrain","geometry","material","color","side","flatShading","plane","castShadow","receiveShadow","add","light","shadow","near","far","left","bottom","right","top","bias","mapSize","x","y","axesHelper","lhelper","onWindowResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","update","delta","getDelta","mergin_mode","mixers","modelLayer","map","model","mesh","z","runtimeInfo","animating","activeRow","activeRowData","vectors","data","filter","v","id","vectorId","xStart","yStart","Za","posXY","newZ","CalculateDeltaPosition","newX","newY","newSab","Infinity","newActiveRow","axisZ","rotateOnWorldAxis","startActiveRow","render","addEventListener","event","el","getBoundingClientRect","clientX","clientY","setFromCamera","intersects","intersectObject","lookAt","face","normal","copy","point","prototype","load2","files","callback","scope","this","file","reader","FileReader","onload","target","readyState","status","parse","result","responseText","readAsArrayBuffer","ColorPicker","props","keys","state","clicked","style","backgroundColof","border","borderRadius","width","height","float","React","Component","defaultProps","loadModel","type","Date","now","setPlane","changeSection","section","connect","layers","api","dispatch","defaultCheckedKeys","useState","setLayers","useEffect","className","onClick","setTimeout","e","stopPropagation","confirm","margin","showLine","checkable","multiple","checkStrictly","selectable","defaultExpandAll","onExpand","expandedKeys","defaultSelectedKeys","onSelect","selectedKeys","info","title","node","toLowerCase","onCheck","checkedKeys","treeData","models","setModelLayer","layer","mode","setMode","JSON","stringify","setPosition","scale","setScale","rotation","setRotation","vector","setVector","newPosition","newRotation","newScale","newMode","newVector","d","onChange","func","oldState","value","Fragment","name","size","theVector","includes","skinnedMesh","animations","animationName","clip","findByName","clipAction","play","startAnimation","SkeletonUtils","clone","push","rot","sca","axisX","axisY","r","selected","index","vec","positions","attributes","loader","crossOrigin","load","texture","error","Modal","setAppElement","active","loadVector","setScene","modelId","menuOpen","setMenuOpen","modalOpen","setModalOpen","setFiles","elements","setElements","toggleModal","newWorld","Navbar","expand","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","NavbarText","NavLink","class","split","minSize","maxSize","defaultSize","Ground","onRequestClose","extention","vectorExt","indexOf","rows","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","n","newLayers","children","key","readAsBinaryString","object","traverse","child","isMesh","loadFBXModel","dracoLoader","DRACOLoader","setDRACOLoader","gltf","loadGLTFModel","Boolean","location","hostname","match","initialState","titles","combineReducers","action","Object","assign","newState","m","rootElement","loggerMiddleware","createLogger","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc6e4c96.chunk.js","sourcesContent":["export const ThemeliodesProblima_1 = (Xa,Ya,Sab,Gab) => {\n\t//1rad=63.6619772367581grads\n\tconst Xb = Xa + Sab*Math.sin(Gab/63.6619772367581);\n\tconst Yb = Ya + Sab*Math.cos(Gab/63.6619772367581);\n\treturn {Xb:Xb , Yb:Yb};\n}\nexport const calculateSab = (Xa,Ya,Xb,Yb) => {\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\treturn Number(Sab.toFixed(4));\n}\nexport const ThemeliodesProblima_2 = (Xa,Ya,Xb,Yb) => {\n\t\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\tvar DX = Xb-Xa;\n\tvar DY = Yb-Ya;\n\tvar theta =Math.atan((absDX/absDY))*63.6619772367581; //http://www.translatorscafe.com/cafe/EN/units-converter/angle/2-3/radian-grad/\n\tif (DX>0 && DY>0){\n\t\tvar Gab = theta;\n\t}\n\tif (DX>0 && DY<0){\n\t\tvar Gab = 200 - theta;\n\t}\n\tif (DX<0 && DY<0){\n\t\tvar Gab = 200 + theta;\n\t}\n\tif (DX<0 && DY>0){\n\t\tvar Gab = 400 - theta;\n\t}\n\tif (DX==0 && DY>0){\n\t\tvar Gab = 0;\n\t}\n\tif (DX==0 && DY<0){\n\t\tvar Gab = 200;\n\t}\n\tif (DX>0 && DY==0){\n\t\tvar Gab = 100;\n\t}\n\tif (DX<0 && DY==0){\n\t\tvar Gab = 300;\n\t}\n\tif (DX==0 && DY==0){\n\t\tvar Gab = 0;\n\t}\n\t//Gab = Gab/63.6619772367581;\n\treturn {Gab:Gab.toFixed(4) , Sab:Sab.toFixed(4)}\n}","import {calculateSab} from \"./ThemeliodiProblimata\";\nconst Xmin = -50;\nconst Ymin = -50;\nconst Xmax = 50;\nconst Ymax = 50;\nconst XZStep=100/99;\nconst YZStep=100/99;\nconst zScale = 100;\nconst zShift = 0;\nconst DemWidth = 100;\n\nexport const posZ=(positionX,positionY,dem) =>{\n\tif (dem.length == 0) {\n\t\treturn 0;\n\t}\n\tvar axeX=(calculateSab(0,positionX,0,Xmin)/XZStep).toFixed(4) - 0;\n\tvar axeY=(calculateSab(0,positionY,0,Ymax)/YZStep).toFixed(4) - 0;\n\tvar intX=Math.floor(axeX);\n\tvar intY=Math.floor(axeY);\n\tvar restX=axeX-intX;\n\tvar restY=axeY-intY;\n\t// var positionAtpoligon = (restX+restY)/2;\n\tif(restX == 0 && restY == 0){\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\treturn Number(dem[axeZ][2].toFixed(4))\n\t}\n\tif (restX<=1-restY){\n\t//check X axis\n\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\tconsole.log(axeZ);\n\t\tif (!dem[axeZ] || !dem[axeZ + 1]) return 0;\n\t\tvar dXZ=dem[axeZ][2] - dem[axeZ+1][2];\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=restX+restY;\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow(restY*YZStep,2)+Math.pow(restY*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*restX_new;\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\t\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t//check Y axis\n\t\t\n\t\tif (!dem[axeZ] || !dem[axeZ + DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ+DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=restY+restX;\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow(restX*XZStep,2)+Math.pow(restX*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*restY_new;\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ = minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\t}\n\telse{\n\t//check X axis\n\t\tvar axeZ=((intY+1)*DemWidth)+intX+1;//calculate height\n\t\tconsole.log(axeZ)\n\t\tif (!dem[axeZ] || !dem[axeZ-1]) return 0;\n\t\tvar dXZ=(dem[axeZ][2] - dem[axeZ-1][2]);\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=(1-restX)+(1-restY);\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow((1-restY)*YZStep,2)+Math.pow((1-restY)*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*(restX_new);\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t\t//check Y axis\n\t\tif (!dem[axeZ] || !dem[axeZ-DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ-DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=(1-restY)+(1-restX);\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow((1-restX)*XZStep,2)+Math.pow((1-restX)*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*(restY_new);\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ= minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\n\t}\n\tconsole.log(FHeight2)\n\treturn Number(FHeight2.toFixed(4));\n}\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {CalculateDeltaPosition} from \"./CalculateDeltaPosition\";\nimport {calculateSab} from \"./ThemeliodiProblimata\";\n        // var modelName = \"models/gltf/\" + model.name + \".glb\";\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n    \n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            scope.parse(event.target.result || event.target.responseText,\"\",callback);\n            // if (callback)\n            //     callback(gltf);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n    reader.readAsArrayBuffer(file);\n\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer, mixer,setModelRuntimeInfo) {\n      loaders.FBXLoader = FBXLoader;\n    \tloaders.GLTFLoader = GLTFLoader;\n    \tvar clock = new THREE.Clock();\n      var raycaster = new THREE.Raycaster();\n      var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n        scene.background = new THREE.Color( 0x000000 );\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n        renderer.shadowMap.enabled = true;\n\n\n        document.getElementById(\"three-map\").appendChild( renderer.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        camera.position.set( 80, 80, 80 );\n        camera.up.set(0,0,1);\n        // controls\n        controls = new OrbitControls( camera, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 10;\n        controls.maxDistance = 1000;\n        controls.maxPolarAngle = Math.PI / 2;\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 99, 99 );\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = true;\n        plane.receiveShadow = true;\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        var light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( 1, 1, 100 );\n        light.shadow = {\n          camera: {\n            near: 0.5,\n            far: 300,\n            left: -50,\n            bottom: -50,\n            right: 50,\n            top: 50\n          },\n          bias: 0.0001,\n          mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        };\n        scene.add( light );\n        \n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );\n\n        var axesHelper = new THREE.AxesHelper( 5 );\n        scene.add( axesHelper );\n\n        var light = new THREE.DirectionalLight( 0x002288 );\n        light.position.set( - 0, - 0, - 100 );\n        scene.add( light );\n\n\n        var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        scene.add( lhelper );        \n\n        var light = new THREE.AmbientLight( 0x666666 );\n        scene.add( light );\n\n\n        var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        var material = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n        pointer = new THREE.Mesh( geometry, material );\n        scene.add( pointer );\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n        function onMouseMove( event ) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        const el = document.getElementById(\"three-map\").getBoundingClientRect()\n        const left = el.left;\n        const top = el.top;\n        mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n        mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        // See if the ray from the camera into the world hits one of our meshes\n        var intersects = raycaster.intersectObject( plane );\n\n        // Toggle rotation bool for meshes that we clicked\n        if ( intersects.length > 0 ) {\n\n          pointer.position.set( 0, 0, 0 );\n          pointer.lookAt( intersects[ 0 ].face.normal );\n\n          pointer.position.copy( intersects[ 0 ].point );\n        }\n\n      }\n      function onWindowResize() {\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n        requestAnimationFrame( animate );\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n\n      function render() {\n        var delta = clock.getDelta();\n\n        for ( var i = 0; i < window.mergin_mode.mixers.length; ++ i ) {\n\n          window.mergin_mode.mixers[ i ].update( delta );\n\n        }\n        window.mergin_mode.modelLayer.map(model => {\n          const {x,y,z} = model.mesh.position;\n          const {animating,activeRow} = model.runtimeInfo;\n          const activeRowData = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow];\n          const xStart = activeRowData[0];\n          const yStart = activeRowData[1];\n          const zStart = activeRowData[2];\n          const Gab = activeRowData[3];\n          const Sab = activeRowData[4];\n          if(animating) {\n            const dem =window.mergin_mode.plane.dem;\n            const {x:newX,y:newY,z:newZ} = CalculateDeltaPosition(Number(x.toFixed(4)),Number(y.toFixed(4)),Number(z.toFixed(4)),Gab,delta,dem);\n            let newSab = calculateSab(xStart,yStart,x,y);\n            if(newSab === Infinity){\n              newSab = 0\n            }\n            if(newSab < Sab){\n              model.mesh.position.set(newX,newY,newZ)  \n            } else {\n              const newActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow + 1];\n              if(!newActiveRow) {\n                  const startActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][0];\n\n                  model.mesh.position.set(startActiveRow[0],startActiveRow[1],startActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:0})\n              } else {\n                  model.mesh.position.set(newActiveRow[0],newActiveRow[1],newActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:activeRow + 1})\n                  // model.mesh.rotation.set(model.mesh.rotation.x,model.mesh.rotation.y,newActiveRow[3]/63.6619772367581)\n                  // model.mesh.rotation.y = (-newActiveRow[3] + 200)/63.6619772367581\n                  // const axisX = new Vector3(1, 0, 0);\n                  // const axisY = new Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  // mesh.rotateOnWorldAxis(axisX, rot.x);\n                  // mesh.rotateOnWorldAxis(axisY, rot.y);\n                  model.mesh.rotateOnWorldAxis(axisZ, -(400 - activeRowData[3] + newActiveRow[3])/63.6619772367581);\n              }\n            }\n            \n          }\n        })\n        renderer.render( scene, camera );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      window.addEventListener( 'mousedown', onMouseMove, false );\n\n      partials = {plane,pointer};\n      return {camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n} ","import {ThemeliodesProblima_1} from \"./ThemeliodiProblimata\";\nimport {posZ} from \"./computeZ\";\n\nexport const CalculateDeltaPosition = (Xa,Ya,Za,Gab,delta,dem) => {\n\tconst Sab = delta; //distance in meters per second (50km/h)\n\tlet posXY = ThemeliodesProblima_1(Xa,Ya,Sab,Gab);\n\tconst newZ =posZ(posXY.Xb,posXY.Yb,dem);\n \t// const DZ = posZ(posXY.Xb,posXY.Yb,dem)-Za;\n\t// const DZ = 0;\n\t// if(DZ<0 || DZ >0) {\n\t// \tconst slope = DZ/Sab;\n\t// \tconst slopeRadians = Math.atan(slope);\n\t// \tconst SabNew = Math.abs(Sab*Math.cos(slopeRadians));\n\t// \tposXY = ThemeliodesProblima_1(Xa,Ya,SabNew,Gab);\n\t// }\n\n\t// const PxPosition = UserCoordinatesXY(posXY.Xb,posXY.Yb);\n\t\n\treturn {x:posXY.Xb , y:posXY.Yb , z:newZ};\n}\n\nexport const CalculateDeltaRotation = (Xa,Ya,Za,Xb,Yb,Zb,Gab,Sab,rotX,rotY) => {\n\tvar DZ = Zb-Za;\n\tvar XYkathetis = ThemeliodesProblima_1(Xb,Yb,Sab,Gab+100);\n\tvar Xkathetis =XYkathetis.Xb;\n\tvar Ykathetis =XYkathetis.Yb;\n\tvar Zkathetis = posZ(Xkathetis,Ykathetis);\n\tvar DZkathetis = Zb-Zkathetis;\n\t\n\tvar RotationX = 0;\n\tvar RotationY =0;\n\t\n\tif(DZ<0 || DZ >0){\n\t\tRotationX = Math.atan(DZ/Sab) ;\n\t\tRotationY = Math.atan(DZkathetis/Sab) ;\n\t}\n\n\tvar DRotationX=rotX-RotationX;\n\tvar DRotationY=rotY-RotationY;\n\t\n\treturn {\n\t\tx:Number(DRotationX),\n\t\ty:Number(DRotationY)\n\t};\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  static propTypes = {\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n    const { keys } = props;\n    this.state = {\n      clicked: false,\n      color:\"#000\"\n    };\n\n  }\n\n  render() {\n    if(this.state.clicked) {\n      return <SketchPicker />\n    }\n    return <div style={{\n      backgroundColof:this.state.color,\n      border:\"3px solid whitesmoke\",\n      borderRadius:\"4px\",\n      width:\"16px\",\n      height:\"16px\",\n      float:\"right\"\n    }}></div>\n  }\n}\n\nexport default ColorPicker;","export const loadModel = model => ({\n  type: 'LOAD_MODEL',\n  model,\n  id:Date.now()\n});\n\nexport const loadVector = vector => ({\n  type: 'LOAD_VECTOR',\n  vector,\n  id:Date.now()\n})\n\nexport const setScene = scene => ({\n  type: 'SET_SCENE',\n  scene,\n  id:Date.now()\n})\n\nexport const setPlane = plane => ({\n  type: 'SET_PLANE',\n  plane,\n  id:Date.now()\n})\n\nexport const changeSection = section => ({\n  type: 'CHANGE_SECTION',\n  section\n})\n\nexport const setLayers = layers => ({\n  type: 'SET_LAYERS',\n  layers\n})\n\nexport const setModelLayer = layer => ({\n  type: 'SET_MODEL_LAYER',\n  layer\n})\n\nexport const setModelRuntimeInfo = (modelId,info) => ({\n  type: 'SET_MODEL_RUNTIME_INFO',\n    modelId,\n  runtimeInfo:{\n    ...info\n  }\n})\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React,{ useState,useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'rc-tree/assets/index.css';\nimport './LayerPanel.css';\nimport Tree, { TreeNode } from \"rc-tree\";\nimport ColorPicker from \"./layout/ColorPicker\";\nimport { SketchPicker } from 'react-color';\nimport { connect } from \"react-redux\";\nimport {changeSection} from \"../actions\";\n\n\n\nfunction LayerPanel (props) {\n  const { keys } = props;\n  const defaultExpandedKeys= keys;\n  const defaultSelectedKeys = [];\n  const defaultCheckedKeys = keys\n\n  const onExpand = expandedKeys => {\n    console.log('onExpand', expandedKeys);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    const title = info.node.title.toLowerCase();\n    console.log('selected', selectedKeys, info);\n    props.changeSection(selectedKeys.length ? title : null)\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    console.log('onCheck', checkedKeys, info);\n  };\n\n  const onEdit = () => {\n    setTimeout(() => {\n    }, 0);\n  };\n\n  const onDel = e => {\n    if (!window.confirm('sure to delete?')) {\n      return;\n    }\n    e.stopPropagation();\n  };\n\n  const [layers,setLayers] = useState(props.layers)\n\n  useEffect(()=>{\n    setLayers(props.layers);\n  },[props.layers])\n  const customLabel = (\n      <span className=\"cus-label\">\n        <span>operations: </span>\n        <span style={{ color: 'blue' }} onClick={onEdit}>\n          Edit\n        </span>\n        &nbsp;\n        <label onClick={e => e.stopPropagation()}>\n          <input type=\"checkbox\" /> checked\n        </label>\n        &nbsp;\n        <span style={{ color: '#EB0000' }} onClick={onDel}>\n          Delete\n        </span>\n      </span>\n    );\n    \n\n    return (\n      <div style={{ margin: '0 20px' }}>\n        <Tree\n          className=\"myCls\"\n          showLine={true}\n          checkable={true}\n          multiple={false}\n          checkStrictly={true}\n          selectable={true}\n          defaultExpandAll={true}\n          onExpand={onExpand}\n          defaultSelectedKeys={defaultSelectedKeys}\n          defaultCheckedKeys={defaultCheckedKeys}\n          onSelect={onSelect}\n          onCheck={onCheck}\n          treeData={layers}\n        />\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeSection:section => dispatch(changeSection(section))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerPanel);\n","import React,{ useState,useEffect } from 'react';\nimport './ModelList.css';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport { SkeletonUtils } from 'three/examples/jsm/utils/SkeletonUtils.js';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {loadModel,changeSection,setModelLayer} from \"../actions\";\n\n\nfunction ModelList(props) {\n  const [mode, setMode] = useState({});\n  const [position, setPosition] = useState(JSON.stringify({}));\n  const [scale, setScale] = useState(JSON.stringify({}));\n  const [rotation, setRotation] = useState(JSON.stringify({}));\n  const [vector, setVector] = useState({});\n\n  useEffect(()=>{\n    const newPosition = {}\n    const newRotation = {}\n    const newScale = {}\n    const newMode = {}\n    const newVector = {}\n    props.models.data.map(d=>{\n      newPosition[d.id] = position[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newRotation[d.id] = rotation[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newScale[d.id] = scale[d.id] || JSON.stringify({x:1,y:1,z:1});\n      newMode[d.id] = mode[d.id] || \"info\";\n      newVector[d.id] = vector[d.id] || 0;\n    })\n    setPosition(newPosition);\n    setRotation(newRotation);\n    setScale(newScale);\n    setMode(newMode);\n    setVector(newVector);\n  },[props.models.data])\n  const onChange = (func,id,oldState,value) => func({...oldState,[id]:value});\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <div className=\"row\">\n      {props.models.data.map(d=>(\n        <div className=\"col-md-6 col-sm-6 col-xs-12\">\n          <div className=\"model-item\">\n            {mode[d.id] === \"info\" ? (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"settings\")}> \n                          <i className=\"fas fa-cog\"></i>\n                        </span> ) : (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"info\")}> \n                          <i className=\"fas fa-arrow-right\"></i>\n                        </span>)}\n            \n            <div className=\"model-item-inner\">\n              {mode[d.id] === \"info\" ? (\n                <React.Fragment>\n                <div>id: {d.id}</div>\n              <div>name: {d.name}</div>\n              <div>size: {(d.size/1000/1000).toFixed(2)} Mb</div>\n              <button style ={{width:\"100%\"}}className=\"btn btn-light\" onClick={()=>{\n                const theVector = props.vectors.filter(v=>{\n                  return v.id == vector[d.id]\n                }\n                )[0];\n\n                if (theVector.name.includes(\"anime\")){\n                  let mesh;\n                  if(d.name.includes(\"glb\") || d.name.includes(\"gltf\")){\n                    mesh = SkeletonUtils.clone( d.mesh.scene );\n                    var mixer = startAnimation( mesh, d.mesh.animations, \"Walk\" );\n                    window.mergin_mode.mixers.push(mixer)\n                  } else {\n                    mesh = d.mesh.clone();\n\n                  }\n                  const rot = JSON.parse(rotation[d.id]);\n                  rot.x = Number(rot.x);\n                  rot.y = Number(rot.y);\n                  rot.z = Number(rot.z);\n                  const sca = JSON.parse(scale[d.id]);\n                  sca.x = Number(sca.x);\n                  sca.y = Number(sca.y);\n                  sca.z = Number(sca.z);\n                  // mesh.rotation.set(rot.x,rot.y,rot.z);\n                  const axisX = new THREE.Vector3(1, 0, 0);\n                  const axisY = new THREE.Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  mesh.rotateOnWorldAxis(axisX, rot.x);\n                  mesh.rotateOnWorldAxis(axisY, rot.y);\n                  // mesh.rotateOnWorldAxis(axisZ, rot.z);\n                  mesh.rotateOnWorldAxis(axisZ, (-theVector.array[0][0][3] )/63.6619772367581);\n                  // mesh.rotation.z = ((theVector.array[0][0][3])/63.6619772367581);\n\n                  mesh.scale.set(sca.x,sca.y,sca.z);\n                  mesh.position.set(...theVector.array[0][0]);\n                  mesh.castShadow = true;\n                  mesh.receiveShadow = true;\n                  props.scene.add(mesh);\n                  props.setModelLayer({\n                    id:Date.now(),\n                    vectorId:theVector.id,\n                    runtimeInfo:{animating:true,activeRow:0},\n                    mesh\n                  });\n                  return false;\n                }\n\n                theVector.array[0].map(r=>{\n                  let mesh;\n                  if(d.name.includes(\"glb\") || d.name.includes(\"gltf\")){\n                  mesh = SkeletonUtils.clone( d.mesh.scene );\n\n                  } else {\n                    mesh = d.mesh.clone();\n\n                  }\n                  // const pos = JSON.parse(position[d.id]);\n                  // pos.x = Number(pos.x);\n                  // pos.y = Number(pos.y);\n                  // pos.z = Number(pos.z);\n                  const rot = JSON.parse(rotation[d.id]);\n                  rot.x = Number(rot.x);\n                  rot.y = Number(rot.y);\n                  rot.z = Number(rot.z);\n                  const axisX = new THREE.Vector3(1, 0, 0);\n                  const axisY = new THREE.Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  mesh.rotateOnWorldAxis(axisX, rot.x);\n                  mesh.rotateOnWorldAxis(axisY, rot.y);\n                  mesh.rotateOnWorldAxis(axisZ, rot.z);\n                  // mesh.rotateOnWorldAxis(axisZ, ( )/63.6619772367581);\n\n                  const sca = JSON.parse(scale[d.id]);\n                  sca.x = Number(sca.x);\n                  sca.y = Number(sca.y);\n                  sca.z = Number(sca.z);\n                  // mesh.rotation.set(rot.x,rot.y,rot.z);\n\n                  mesh.scale.set(sca.x,sca.y,sca.z);\n                  mesh.position.set(...r);\n                  mesh.castShadow = true;\n                  mesh.receiveShadow = true;\n                  props.scene.add(mesh)\n                })\n                \n              }} >Add To Scene</button>\n                </React.Fragment>\n                ):(\n                <React.Fragment>\n                  <label>Rotation</label>\n                  <input onChange={e=>onChange(setRotation,d.id,rotation,e.target.value)} value={rotation[d.id]}/>\n                  <label>Scale</label>\n                  <input onChange={e=>onChange(setScale,d.id,scale,e.target.value)} value={scale[d.id]}/>\n                  <label>Position</label>\n                  {/*<input onChange={e=>onChange(setPosition,d.id,position,e.target.value)} value={position[d.id]}/>*/}\n                  <select onChange={e=> {\n                    onChange(setVector,d.id,vector,e.target.value)\n                  }}>\n                    <option value={0} selected={vector[d.id] == 0}>Select</option>\n                    {props.vectors.map(v=><option value={v.id} selected={vector[d.id] == v.id}>{v.name}</option>)}\n                  </select>\n                </React.Fragment>\n                )}\n              \n            </div>\n          </div>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n\nfunction startAnimation( skinnedMesh, animations, animationName ) {\n\n        var mixer = new THREE.AnimationMixer( skinnedMesh );\n        var clip = THREE.AnimationClip.findByName( animations, animationName );\n\n        if ( clip ) {\n\n          var action = mixer.clipAction( clip );\n          action.play();\n\n        }\n\n        return mixer;\n\n      }","import React,{ useState,useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport {setPlane} from \"../actions/index\";\nfunction ModelList(props) {\n  const [vector, setVector] = useState(0);\n\n  const onChange = vectorId => setVector(vectorId);\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <select onChange={e=> {\n        const v = props.vectors.filter(vec => vec.id == e.target.value)[0].array[0];\n        var positions = props.plane.geometry.attributes.position.array;\n        var x, y, z, index;\n        x = y = z = index = 0;\n\n        for ( var i = 0, l = 100*100; i < l; i ++ ) {\n\n            index ++; \n            index ++;\n            if(i==0){\n            positions[ index ++ ] = 200;\n\n            }else {\n\n            positions[ index ++ ] = (((v[i] ||[])[2]) || 0)*0.01;\n            }\n\n        }\n        props.plane.geometry.attributes.position.needsUpdate = true;\n        var loader = new THREE.TextureLoader();\n          loader.crossOrigin = \"\";\n          loader.load('../assets/ground-texture.png',\n              function( texture ) {\n                const material = new THREE.MeshBasicMaterial({map: texture});\n                props.plane.material = material;\n                props.plane.material.needsUpdate = true;\n              },\n              function () {},  // onProgress function\n              function ( error ) { console.log( error ) } // onError function\n          );\n        props.setPlane(v)\n      }}>\n        <option value={0} selected={vector == 0}>Select</option>\n        {props.vectors.map(v=><option value={v.id} selected={vector == v.id}>{v.name}</option>)}\n      </select>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    plane: state.api.plane.mesh\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPlane: array => dispatch(setPlane({dem:array}))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n","import React,{ useState,useEffect } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport {ThemeliodesProblima_2} from \"../helpers/ThemeliodiProblimata\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {setModelRuntimeInfo,loadVector,loadModel,changeSection,setScene,setLayers,setPlane} from \"../actions\";\nimport readXlsxFile from 'read-excel-file';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport * as XLSX from 'xlsx';\n\nimport ModelList from \"./ModelList\";\nimport Ground from \"./Ground\";\nModal.setAppElement('#root')\n\nfunction App(props) {\n  const allClasses = (name) => {\n    if(name === \"models\" ){\n      return <ModelList />\n    } else if(name === \"vertices\" ){\n      return <Ground />\n    } else {\n      return <span></span>;\n    }\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [files, setFiles] = useState([])\n  const [elements, setElements] = useState({\n    mixers:[], camera:{}, controls:{}, scene:{}, renderer:{},pointer:{}, partials:{},loaders:{},onWindowResize:()=>{}\n  })\n  const toggleModal = ()=>setModalOpen(!modalOpen);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n\n  const  loadGLTFModel = file => {\n    const {name,size} = file[0];\n    const {scene,loaders} = elements;\n\n    const loader = new loaders.GLTFLoader();\n    var dracoLoader = new DRACOLoader();\n    loader.setDRACOLoader( dracoLoader );\n\n    loader.load2(file, gltf => {\n         // var scene = gltf.scene;\n\n          // model.animations = gltf.animations;\n          // model.scene = scene;\n\n          // Enable Shadows\n\n          gltf.scene.traverse( function ( object ) {\n\n            if ( object.isMesh ) {\n\n              object.castShadow = true;\n\n            }\n\n          } );\n        props.loadModel({name,size,object:gltf});\n        setModalOpen(!modalOpen);       \n        const newLayers = JSON.parse(JSON.stringify(props.layers));\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });\n  }   \n  const  loadFBXModel = file => {\n    const {name,size} = file[0];\n    const {scene,loaders} = elements;\n\n    const loader = new loaders.FBXLoader();\n    \n    loader.load2(file, object => {\n        console.log(object.animations)\n        // if(object.animations.length > 0) {\n        //   elements.mixer = new THREE.AnimationMixer( object );\n        //   var action = elements.mixer.clipAction( object.animations[ 0 ] );\n        //   action.play();  \n        // }\n        \n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        props.loadModel({name,size,object});\n        setModalOpen(!modalOpen);       \n        const newLayers = JSON.parse(JSON.stringify(props.layers));\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });\n  }\n  useEffect(()=>{\n      let {mixers,camera,controls,scene,renderer,pointer,partials,loaders} = elements;\n      const rendererContainer = document.getElementById(\"three-map\");\n      const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer,mixers,props.setModelRuntimeInfo);\n      props.setScene(newWorld.scene);\n      props.setPlane({id:Date.now(),mesh:newWorld.partials.plane});\n      setElements({...newWorld});\n  },[])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar expand=\"md\" className=\"navbar navbar-dark\">\n          <NavbarBrand href=\"/\"><div className=\"logo-container\"><div className=\"logo\"/>Mergin' Mode</div></NavbarBrand>\n          <NavbarToggler onClick={toggleMenu} />\n          <Collapse isOpen={menuOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  File\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick = {toggleModal}>\n                    <span>Import </span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>\n                <NavLink href=\"https://github.com/prieston/mergin_mode\" target=\"_blank\">\n                <i class=\"fab fa-github\"></i>\n                <span>GitHub</span>\n                </NavLink>\n            </NavbarText>\n          </Collapse>\n        </Navbar>\n      </header>\n      <main>\n      <SplitPane split=\"vertical\" minSize={50} maxSize={-50} defaultSize={\"40%\"} onChange={elements.onWindowResize}>\n        <LayerPanel />\n        <SplitPane split=\"horizontal\" minSize={50} maxSize={-50} defaultSize={\"60%\"} onChange={elements.onWindowResize}>\n          <div id = \"three-map\" />\n          {props.section!== null && allClasses(props.section)}\n        </SplitPane>\n      </SplitPane>\n        \n\n      </main>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={()=>setModalOpen(!modalOpen)}\n      >\n        <div className=\"container form\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <input className=\"form-control\" type=\"file\" onChange={e => {\n              setFiles([...e.target.files]);\n            }}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-primary form-control\" onClick={()=>{\n                const extention = files[0].name.split(\".\")[files[0].name.split(\".\").length - 1];\n                const vectorExt = [\"xlsx\",\"xls\",\"ods\",\"csv\",\"xyz\"];\n                if (vectorExt.indexOf(extention) > -1) {\n                  const reader = new FileReader();\n                  const rows= [];\n                  reader.onload = (evt) => { // evt = on_file_select event\n                      /* Parse data */\n                      const bstr = evt.target.result;\n                      const wb = XLSX.read(bstr, {type:'binary'});\n                      /* Get first worksheet */\n                      const wsname = wb.SheetNames[0];\n                      const ws = wb.Sheets[wsname];\n                      /* Convert array of arrays */\n                      const data = XLSX.utils.sheet_to_csv(ws, {header:1});\n                      /* Update state */\n                      rows.push(data.split(\"\\n\").map(v=>v.split(\",\").filter(v=>v.length > 0).map(n=>Number(n))));\n\n                      const {name,size} = files[0];\n                      const newLayers = JSON.parse(JSON.stringify(props.layers));\n                      newLayers[1].children[2].children.push({ key: `1-2-${newLayers[1].children[2].children.length}`, title: name, checkable:false,selectable:false})\n                      props.setLayers(newLayers);\n                      if(name.includes(\"anime\")){\n                        for(let i=0;i< rows[0].length - 1;i++) {\n                          const Xa = rows[0][i][0]; \n                          const Ya = rows[0][i][1];\n                          const Xb = (rows[0][i + 1] || [])[0] || 0; \n                          const Yb = (rows[0][i + 1] || [])[1] || 0; \n                          const {Gab,Sab} = ThemeliodesProblima_2(Xa,Ya,Xb,Yb)\n                          rows[0][i][3] = Number(Gab);\n                          rows[0][i][4] = Number(Sab);\n                        }\n                        props.loadVector({name,size,array:rows});\n                      } else {\n                        props.loadVector({name,size,array:rows});\n                      }\n                  };\n                  reader.readAsBinaryString(files[0]);\n                  setModalOpen(!modalOpen);       \n                  \n                 \n                } else if(extention == \"fbx\") {\n                  loadFBXModel(files);\n                } else if (extention === \"glb\" || extention === \"gltf\") {\n                  loadGLTFModel(files);\n                }\n                console.log(vectorExt)\n              }}>Load</button>\n            </div>\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-secondary form-control\" onClick={toggleModal}>Close</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    section:state.api.section.active,\n    title:state.api.section.title,\n    layers:state.api.layers,\n    vectors: state.api.vectors,\n    modelLayer:state.api.modelLayer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    loadVector:vector =>dispatch(loadVector(vector)),\n    changeSection:section => dispatch(changeSection(section)),\n    setScene:scene => dispatch(setScene(scene)),\n    setPlane:plane => dispatch(setPlane(plane)),\n    setLayers:layers => dispatch(setLayers(layers)),\n    setModelRuntimeInfo:(modelId,info) => dispatch(setModelRuntimeInfo(modelId,info))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\n\n// function instantiateUnits() {\n\n//         var numSuccess = 0;\n\n//         for ( var i = 0; i < UNITS.length; ++ i ) {\n\n//           var u = UNITS[ i ];\n//           var model = getModelByName( u.modelName );\n\n//           if ( model ) {\n\n//             var clonedScene = SkeletonUtils.clone( model.scene );\n\n//             if ( clonedScene ) {\n\n//               // THREE.Scene is cloned properly, let's find one mesh and launch animation for it\n//               var clonedMesh = clonedScene.getObjectByName( u.meshName );\n\n//               if ( clonedMesh ) {\n\n//                 var mixer = startAnimation( clonedMesh, model.animations, u.animationName );\n\n//                 // Save the animation mixer in the list, will need it in the animation loop\n//                 mixers.push( mixer );\n//                 numSuccess ++;\n\n//               }\n\n//               // Different models can have different configurations of armatures and meshes. Therefore,\n//               // We can't set position, scale or rotation to individual mesh objects. Instead we set\n//               // it to the whole cloned scene and then add the whole scene to the game world\n//               // Note: this may have weird effects if you have lights or other items in the GLTF file's scene!\n//               worldScene.add( clonedScene );\n\n//               if ( u.position ) {\n\n//                 clonedScene.position.set( u.position.x, u.position.y, u.position.z );\n\n//               }\n\n//               if ( u.scale ) {\n\n//                 clonedScene.scale.set( u.scale, u.scale, u.scale );\n\n//               }\n\n//               if ( u.rotation ) {\n\n//                 clonedScene.rotation.x = u.rotation.x;\n//                 clonedScene.rotation.y = u.rotation.y;\n//                 clonedScene.rotation.z = u.rotation.z;\n\n//               }\n\n//                   }\n\n//           } else {\n\n//             console.error( \"Can not find model\", u.modelName );\n\n//           }\n\n//         }\n\n//         console.log( `Successfully instantiated ${numSuccess} units` );\n\n//       }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nwindow.mergin_mode = {\n\tmodelLayer: [],\n\tvectors:[],\n\tplane:{},\n\tmixers:[]\n}\nconst initialState = {\n\tlayers:[\n\t  {\n\t    key: '0',\n\t    title: 'Models',\n\t    checkable:false,\n\t    selectable:true,\n\t    children: [\n\n\t    ],\n\t  },\n\t  {\n\t    key: '1',\n\t    title: 'Scene',\n\t    checkable:false,\n\t    selectable:false,\n\t    children: [\n\t      {\n\t        key: '1-0',\n\t        title: 'Background',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: [\n\t        { key: '1-0-0', title: 'Color'},\n\t        { key: '1-0-1', title: 'Image' },\n\t        { key: '1-0-2', title: 'Video' }\n\t      ] },\n\t      {\n\t        key: '1-1',\n\t        title: 'Ground',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: [\n\t          { key: '1-1-0', title: 'Color'},\n\t          { key: '1-1-1', title: 'Image' },\n\t          { key: '1-1-2', title: 'Vertices' },\n\t        ],\n\t      },\n\t      {\n\t        key: '1-2',\n\t        title: 'Vector Layers',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t      {\n\t        key: '1-3',\n\t        title: 'Model Layers',\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t    ],\n\t  },\n\t],\n\tscene:{\t},\n\tplane:{\n\t\tid:null,\n\t\tmesh:{},\n\t\tdem:[]\n\t},\n\tmodels:{\n\t\tdata:[]\n\t},\n\tvectors:{\n\t\tdata:[]\n\t},\n\tmodelLayer:[],\n\tsection:{\n\t\tactive:null,\n\t\ttitle:null\n\t}\n};\n\nconst titles= {\n\tmodels:\"Models\"\n};\n\nconst api = (state = initialState, action) => {\n  switch (action.type) {\n  \tcase \"LOAD_MODEL\":\n\t  \treturn Object.assign({},state, {\n\t  \t\tmodels: Object.assign({},state.models,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.models.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tmesh:action.model.object,\n\t  \t\t\t\t\tname:action.model.name,\n\t  \t\t\t\t\tsize:action.model.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\tcase \"LOAD_VECTOR\":{\n\n\t\tconst newState = Object.assign({},state, {\n\t  \t\tvectors: Object.assign({},state.vectors,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.vectors.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tarray:action.vector.array,\n\t  \t\t\t\t\tname:action.vector.name,\n\t  \t\t\t\t\tsize:action.vector.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\t  \twindow.mergin_mode.vectors = newState.vectors;\n\t  \treturn newState; \n\t}\n  \tcase \"CHANGE_SECTION\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tsection:Object.assign({},state.section,{\n\t  \t\t\tactive:action.section,\n\t  \t\t\ttitle:titles[action.section] || null\n\t  \t\t})\n\t  \t});\n\tcase \"SET_SCENE\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tscene:action.scene,\n\t  \t});\n\tcase \"SET_PLANE\":\n\t  \tconst newState = Object.assign({},state,{\n\t  \t\tplane:{...state.plane,...action.plane},\n\t  \t});\n\t  \twindow.mergin_mode.plane = newState.plane;\n\t  \treturn newState;\n\tcase \"SET_LAYERS\":\n\t\treturn Object.assign( {},state,{\n\t\t\tlayers: action.layers\n\t  \t});\n\tcase \"SET_MODEL_LAYER\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer, action.layer]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n\tcase \"SET_MODEL_RUNTIME_INFO\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer.map(m=>{\n\t\t\t\tconsole.log(m.id,action.modelId)\n\t\t\t\tif(m.id == action.modelId){\n\t\t\t\t\tm.runtimeInfo = action.runtimeInfo\n\t\t\t\t};\n\t\t\t\treturn m;\n\t\t\t})]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  api\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\n\nconst rootElement = document.getElementById('root');\n\nconst loggerMiddleware = createLogger({\n  // ...options\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunkMiddleware , loggerMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}