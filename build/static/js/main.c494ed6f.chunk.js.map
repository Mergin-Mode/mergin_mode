{"version":3,"sources":["components/layout/DropZone.js","helpers/ThemeliodiProblimata.js","helpers/computeZ.js","helpers/createWorld.js","helpers/CalculateDeltaPosition.js","components/layout/ColorPicker.js","actions/index.js","components/LayerPanel.js","components/ModelList.js","components/Background.js","components/Ground.js","components/layout/Slider.js","components/Images.js","components/Color.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["MyDropzone","props","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","useState","fileName","setFileName","className","onChange","e","console","log","target","files","Array","prototype","slice","call","map","file","name","join","href","ThemeliodesProblima_1","Xa","Ya","Sab","Gab","Xb","Math","sin","Yb","cos","calculateSab","absDX","abs","absDY","sqrt","pow","Number","toFixed","ThemeliodesProblima_2","DX","DY","theta","atan","posZ","positionX","positionY","dem","length","axeX","axeY","intX","floor","intY","restX","restY","axeZ","dXZ","ipotinousaX","restX_new","IpotinousaDiagwniou2","minIpotinousaX","slopeX","finalDXZ","heightX","dYZ","ipotinousaY","restY_new","IpotinousaDiagwniou1","minIpotinousaY","slopeY","finalDYZ","heightY","percent","FHeight1","FHeight2","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","setModelRuntimeInfo","FBXLoader","GLTFLoader","clock","THREE","raycaster","mouse","host","document","getElementById","axesHost","AxesScene","background","antialias","alpha","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","clientWidth","clientHeight","renderer2","appendChild","domElement","position","set","up","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","PI","camera2","lookAt","controls2","enablePan","enableZoom","update","g","pos","getAttribute","pa","array","j","i","needsUpdate","computeVertexNormals","generateTerrain","geometry","material","color","side","flatShading","plane","castShadow","receiveShadow","add","light","shadow","near","far","left","bottom","right","top","bias","mapSize","x","y","axesHelper","crossOrigin","opacity","transparent","alphaTest","sky","onWindowResize","aspect","updateProjectionMatrix","rotation","animate","requestAnimationFrame","delta","getDelta","mergin_mode","mixers","modelLayer","model","mesh","z","runtimeInfo","animating","activeRow","activeRowData","vectors","data","filter","v","id","vectorId","xStart","yStart","Za","posXY","newZ","CalculateDeltaPosition","newX","newY","newSab","Infinity","newActiveRow","axisZ","rotateOnWorldAxis","startActiveRow","render","addEventListener","event","el","getBoundingClientRect","clientX","clientY","setFromCamera","intersects","intersectObject","face","normal","copy","point","load2","callback","scope","this","reader","FileReader","onload","readyState","status","parse","result","responseText","readAsArrayBuffer","ColorPicker","keys","state","clicked","style","backgroundColof","border","borderRadius","width","height","float","React","Component","defaultProps","loadModel","type","Date","now","setPlane","changeSection","section","setLayers","layers","setModelLayer","layer","toggleLayer","visible","split","sublayer","backgroundColor","remove","connect","api","dispatch","defaultCheckedKeys","useEffect","onClick","setTimeout","stopPropagation","confirm","margin","showLine","checkable","multiple","checkStrictly","selectable","defaultExpandAll","onExpand","expandedKeys","defaultSelectedKeys","onSelect","selectedKeys","info","title","node","key","onCheck","checkedKeys","checked","treeData","models","mode","setMode","JSON","stringify","setPosition","scale","setScale","setRotation","vector","setVector","newPosition","newRotation","newScale","newMode","newVector","d","func","oldState","value","Fragment","size","theVector","includes","skinnedMesh","animations","animationName","clip","findByName","clipAction","play","startAnimation","SkeletonUtils","clone","push","rot","sca","axisX","axisY","traverse","isMesh","transform","updateMatrix","setMatrixAt","matrix","newLayers","children","selected","vec","index","positions","attributes","loader","load","texture","error","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","Slider","centerMode","centerSlidePercentage","emulateTouch","slides","slide","src","legend","groundColor","setBackgroundColor","setGroundColor","setColor","hex","Modal","setAppElement","active","loadVector","setScene","setSky","modelId","menuOpen","setMenuOpen","modalOpen","setModalOpen","setFiles","elements","setElements","toggleModal","newWorld","Navbar","expand","NavbarBrand","NavbarToggler","Collapse","isOpen","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","NavbarText","NavLink","minSize","maxSize","defaultSize","Ground","onRequestClose","DropZone","extention","indexOf","rows","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_csv","header","n","icon","readAsBinaryString","object","child","loadFBXModel","dracoLoader","DRACOLoader","setDRACOLoader","gltf","loadGLTFModel","Boolean","location","hostname","match","initialState","titles","combineReducers","action","Object","assign","newState","m","rootElement","loggerMiddleware","createLogger","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c494ed6f.chunk.js","sourcesContent":["import React, {useCallback,useState} from 'react'\nimport {useDropzone} from 'react-dropzone'\n \nfunction MyDropzone(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n  const onChange = (e) => {\n    console.log(e.target.files)\n    setFileName(Array.prototype.slice.call(e.target.files).map(file=>file.name).join(\", \") || \"\");\n    props.onChange(e)\n  }\n  const [fileName,setFileName] = useState(\"\");\n  return (\n    <div className=\"mm-dropzone\" {...getRootProps()} >\n      <input {...getInputProps()} onChange={onChange} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n      <p><a href=\"#\">{fileName}</a></p>\n    </div>\n  )\n}\nexport default MyDropzone;","export const ThemeliodesProblima_1 = (Xa,Ya,Sab,Gab) => {\n\t//1rad=63.6619772367581grads\n\tconst Xb = Xa + Sab*Math.sin(Gab/63.6619772367581);\n\tconst Yb = Ya + Sab*Math.cos(Gab/63.6619772367581);\n\treturn {Xb:Xb , Yb:Yb};\n}\nexport const calculateSab = (Xa,Ya,Xb,Yb) => {\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\treturn Number(Sab.toFixed(4));\n}\nexport const ThemeliodesProblima_2 = (Xa,Ya,Xb,Yb) => {\n\t\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\tvar DX = Xb-Xa;\n\tvar DY = Yb-Ya;\n\tvar theta =Math.atan((absDX/absDY))*63.6619772367581; //http://www.translatorscafe.com/cafe/EN/units-converter/angle/2-3/radian-grad/\n\tif (DX>0 && DY>0){\n\t\tvar Gab = theta;\n\t}\n\tif (DX>0 && DY<0){\n\t\tvar Gab = 200 - theta;\n\t}\n\tif (DX<0 && DY<0){\n\t\tvar Gab = 200 + theta;\n\t}\n\tif (DX<0 && DY>0){\n\t\tvar Gab = 400 - theta;\n\t}\n\tif (DX==0 && DY>0){\n\t\tvar Gab = 0;\n\t}\n\tif (DX==0 && DY<0){\n\t\tvar Gab = 200;\n\t}\n\tif (DX>0 && DY==0){\n\t\tvar Gab = 100;\n\t}\n\tif (DX<0 && DY==0){\n\t\tvar Gab = 300;\n\t}\n\tif (DX==0 && DY==0){\n\t\tvar Gab = 0;\n\t}\n\t//Gab = Gab/63.6619772367581;\n\treturn {Gab:Gab.toFixed(4) , Sab:Sab.toFixed(4)}\n}","import {calculateSab} from \"./ThemeliodiProblimata\";\nconst Xmin = -50;\nconst Ymin = -50;\nconst Xmax = 50;\nconst Ymax = 50;\nconst XZStep=100/99;\nconst YZStep=100/99;\nconst zScale = 150;\nconst zShift = 0;\nconst DemWidth = 100;\n\nexport const posZ=(positionX,positionY,dem) =>{\n\tif (dem.length == 0) {\n\t\treturn 0;\n\t}\n\tvar axeX=(calculateSab(0,positionX,0,Xmin)/XZStep).toFixed(4) - 0;\n\tvar axeY=(calculateSab(0,positionY,0,Ymax)/YZStep).toFixed(4) - 0;\n\tvar intX=Math.floor(axeX);\n\tvar intY=Math.floor(axeY);\n\tvar restX=axeX-intX;\n\tvar restY=axeY-intY;\n\t// var positionAtpoligon = (restX+restY)/2;\n\tif(restX == 0 && restY == 0){\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\treturn Number(dem[axeZ][2].toFixed(4))\n\t}\n\tif (restX<=1-restY){\n\t//check X axis\n\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\t// console.log(axeZ);\n\t\tif (!dem[axeZ] || !dem[axeZ + 1]) return 0;\n\t\tvar dXZ=dem[axeZ][2] - dem[axeZ+1][2];\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=restX+restY;\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow(restY*YZStep,2)+Math.pow(restY*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*restX_new;\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\t\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t//check Y axis\n\t\t\n\t\tif (!dem[axeZ] || !dem[axeZ + DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ+DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=restY+restX;\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow(restX*XZStep,2)+Math.pow(restX*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*restY_new;\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ = minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\t}\n\telse{\n\t//check X axis\n\t\tvar axeZ=((intY+1)*DemWidth)+intX+1;//calculate height\n\t\t// console.log(axeZ)\n\t\tif (!dem[axeZ] || !dem[axeZ-1]) return 0;\n\t\tvar dXZ=(dem[axeZ][2] - dem[axeZ-1][2]);\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=(1-restX)+(1-restY);\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow((1-restY)*YZStep,2)+Math.pow((1-restY)*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*(restX_new);\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t\t//check Y axis\n\t\tif (!dem[axeZ] || !dem[axeZ-DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ-DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=(1-restY)+(1-restX);\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow((1-restX)*XZStep,2)+Math.pow((1-restX)*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*(restY_new);\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ= minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\n\t}\n\t// console.log(FHeight2)\n\treturn Number(FHeight2.toFixed(4));\n}\n","import * as THREE from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {CalculateDeltaPosition} from \"./CalculateDeltaPosition\";\nimport {calculateSab} from \"./ThemeliodiProblimata\";\n        // var modelName = \"models/gltf/\" + model.name + \".glb\";\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n    \n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            scope.parse(event.target.result || event.target.responseText,\"\",callback);\n            // if (callback)\n            //     callback(gltf);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n    reader.readAsArrayBuffer(file);\n\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer, mixer,setModelRuntimeInfo) {\n      loaders.FBXLoader = FBXLoader;\n    \tloaders.GLTFLoader = GLTFLoader;\n    \tvar clock = new THREE.Clock();\n      var raycaster = new THREE.Raycaster();\n      var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n        const axesHost = document.getElementById(\"axes-helper\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n        const AxesScene = new THREE.Scene();\n        scene.background = new THREE.Color( 0x000000 );\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 0 );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n\n        const renderer2 = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer2.setPixelRatio( window.devicePixelRatio );\n        renderer2.setClearColor( 0x000000, 0 )\n        renderer2.setSize( axesHost.clientWidth, axesHost.clientHeight );\n\n\n        host.appendChild( renderer.domElement );\n        axesHost.appendChild( renderer2.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        // camera = new THREE.OrthographicCamera( host.clientWidth/-2,host.clientWidth/2,host.clientHeight/2,host.clientHeight/-2, 1, 10000 );\n        camera.position.set( 80, 80, 80 );\n        camera.up.set(0,0,1);\n\n        // controls = new TrackballControls( camera, renderer.domElement );\n        controls = new OrbitControls( camera, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 1;\n        controls.maxDistance = 1000;\n        controls.maxPolarAngle = Math.PI / 2;\n\n        \n\n        const camera2 = new THREE.PerspectiveCamera( 60, axesHost.clientWidth / axesHost.clientHeight, 1, 10000 );\n        // const camera2 = new THREE.OrthographicCamera( axesHost.clientWidth/-2,axesHost.clientWidth/2,axesHost.clientHeight/2,axesHost.clientHeight/-2, 1, 10000 );\n        // camera2.position.sub( camera.position,controls2.target );\n        camera2.position.set(6,6,6);\n        camera2.lookAt( AxesScene.position );\n\n        const controls2 = new OrbitControls( camera2, renderer.domElement );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls2.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls2.dampingFactor = 0.05;\n        controls2.screenSpacePanning = false;\n        controls2.maxPolarAngle = Math.PI / 2;\n        controls2.enablePan = false;\n        controls2.enableZoom = false;\n        controls2.update();\n\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 99, 99 );\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = true;\n        plane.receiveShadow = true;\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        var light = new THREE.DirectionalLight( 0xffffff );\n        light.position.set( 1, 1, 100 );\n        light.shadow = {\n          camera: {\n            near: 0.5,\n            far: 300,\n            left: -50,\n            bottom: -50,\n            right: 50,\n            top: 50\n          },\n          bias: 0.0001,\n          mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        };\n        scene.add( light );\n        \n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );\n\n        var axesHelper = new THREE.AxesHelper( 5 );\n        AxesScene.add( axesHelper );\n        var light = new THREE.DirectionalLight( 0x002288 );\n        light.position.set( - 0, - 0, - 100 );\n        scene.add( light );\n\n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );        \n\n        var light = new THREE.AmbientLight( 0x666666 );\n        scene.add( light );\n\n\n        var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        var material = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n        pointer = new THREE.Mesh( geometry, material );\n        // scene.add( pointer );\n\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var loader = new THREE.TextureLoader();\n        loader.crossOrigin = \"\";\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var material = new THREE.MeshBasicMaterial({opacity: 0,\n          transparent: true,\n          alphaTest: 0.05,\n          side: THREE.DoubleSide\n        });\n        const sky = new THREE.Mesh( geometry, material );\n        sky.rotation.set(Math.PI/2,0,0)\n        scene.add(sky)  \n\n        // loader.load(src,\n        //       function( texture ) {\n        //         sky.rotation.set(Math.PI/2,0,0)\n        //         sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n        //         sky.material.needsUpdate = true;\n        //         // props.scene.add(props.sky)  \n        //       },\n        //       function () {},  // onProgress function\n        //       function ( error ) { console.log( error ) } // onError function\n        //   );\n    \n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n        function onMouseMove( event ) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        const el = document.getElementById(\"three-map\").getBoundingClientRect()\n        const left = el.left;\n        const top = el.top;\n        mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n        mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        // See if the ray from the camera into the world hits one of our meshes\n        var intersects = raycaster.intersectObject( plane );\n\n        // Toggle rotation bool for meshes that we clicked\n        if ( intersects.length > 0 ) {\n\n          pointer.position.set( 0, 0, 0 );\n          pointer.lookAt( intersects[ 0 ].face.normal );\n\n          pointer.position.copy( intersects[ 0 ].point );\n        }\n          // console.log(pointer.position)\n\n      }\n      function onWindowResize() {\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        camera2.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n        // setTimeout( function() {\n        requestAnimationFrame( animate );\n        // }, 1000 / 60 );\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        controls2.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n\n      function render() {\n        var delta = clock.getDelta();\n\n        for ( var i = 0; i < window.mergin_mode.mixers.length; ++ i ) {\n\n          window.mergin_mode.mixers[ i ].update( delta );\n\n        }\n        window.mergin_mode.modelLayer.map(model => {\n          const {x,y,z} = model.mesh.position;\n          const {animating,activeRow} = model.runtimeInfo;\n          const activeRowData = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow];\n          const xStart = activeRowData[0];\n          const yStart = activeRowData[1];\n          const zStart = activeRowData[2];\n          const Gab = activeRowData[3];\n          const Sab = activeRowData[4];\n          if(\n            animating &&\n            typeof x !== \"undefined\" &&\n            typeof y !== \"undefined\" &&\n            typeof z !== \"undefined\"\n            ) {\n            const dem =window.mergin_mode.plane.dem;\n            const {x:newX,y:newY,z:newZ} = CalculateDeltaPosition(Number(x.toFixed(4)),Number(y.toFixed(4)),Number(z.toFixed(4)),Gab,delta,dem);\n            let newSab = calculateSab(xStart,yStart,x,y);\n            if(newSab === Infinity){\n              newSab = 0\n            }\n            if(newSab < Sab){\n              model.mesh.position.set(newX,newY,newZ)  \n            } else {\n              const newActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow + 1];\n              if(!newActiveRow) {\n                  const startActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][0];\n\n                  model.mesh.position.set(startActiveRow[0],startActiveRow[1],startActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:false,activeRow:0})\n              } else {\n                  model.mesh.position.set(newActiveRow[0],newActiveRow[1],newActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:activeRow + 1})\n                  // model.mesh.rotation.set(model.mesh.rotation.x,model.mesh.rotation.y,newActiveRow[3]/63.6619772367581)\n                  // model.mesh.rotation.y = (-newActiveRow[3] + 200)/63.6619772367581\n                  // const axisX = new Vector3(1, 0, 0);\n                  // const axisY = new Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  // mesh.rotateOnWorldAxis(axisX, rot.x);\n                  // mesh.rotateOnWorldAxis(axisY, rot.y);\n                  model.mesh.rotateOnWorldAxis(axisZ, -(400 - activeRowData[3] + newActiveRow[3])/63.6619772367581);\n              }\n            }\n            \n          }\n        })\n        renderer.render( scene, camera );\n        renderer2.render( AxesScene, camera2 );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      document.getElementById(\"three-map\").addEventListener( 'click', onMouseMove, false );\n\n      partials = {plane,pointer,sky};\n      return {camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n} ","import {ThemeliodesProblima_1} from \"./ThemeliodiProblimata\";\nimport {posZ} from \"./computeZ\";\n\nexport const CalculateDeltaPosition = (Xa,Ya,Za,Gab,delta,dem) => {\n\tconst Sab = delta*1.2; //distance in meters per second (50km/h)\n\tlet posXY = ThemeliodesProblima_1(Xa,Ya,Sab,Gab);\n\tconst newZ =posZ(posXY.Xb,posXY.Yb,dem);\n \t// const DZ = posZ(posXY.Xb,posXY.Yb,dem)-Za;\n\t// const DZ = 0;\n\t// if(DZ<0 || DZ >0) {\n\t// \tconst slope = DZ/Sab;\n\t// \tconst slopeRadians = Math.atan(slope);\n\t// \tconst SabNew = Math.abs(Sab*Math.cos(slopeRadians));\n\t// \tposXY = ThemeliodesProblima_1(Xa,Ya,SabNew,Gab);\n\t// }\n\n\t// const PxPosition = UserCoordinatesXY(posXY.Xb,posXY.Yb);\n\t\n\treturn {x:posXY.Xb , y:posXY.Yb , z:newZ};\n}\n\nexport const CalculateDeltaRotation = (Xa,Ya,Za,Xb,Yb,Zb,Gab,Sab,rotX,rotY) => {\n\tvar DZ = Zb-Za;\n\tvar XYkathetis = ThemeliodesProblima_1(Xb,Yb,Sab,Gab+100);\n\tvar Xkathetis =XYkathetis.Xb;\n\tvar Ykathetis =XYkathetis.Yb;\n\tvar Zkathetis = posZ(Xkathetis,Ykathetis);\n\tvar DZkathetis = Zb-Zkathetis;\n\t\n\tvar RotationX = 0;\n\tvar RotationY =0;\n\t\n\tif(DZ<0 || DZ >0){\n\t\tRotationX = Math.atan(DZ/Sab) ;\n\t\tRotationY = Math.atan(DZkathetis/Sab) ;\n\t}\n\n\tvar DRotationX=rotX-RotationX;\n\tvar DRotationY=rotY-RotationY;\n\t\n\treturn {\n\t\tx:Number(DRotationX),\n\t\ty:Number(DRotationY)\n\t};\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  static propTypes = {\n  };\n\n  static defaultProps = {\n  };\n\n  constructor(props) {\n    super(props);\n    const { keys } = props;\n    this.state = {\n      clicked: false,\n      color:\"#000\"\n    };\n\n  }\n\n  render() {\n    if(this.state.clicked) {\n      return <SketchPicker />\n    }\n    return <div style={{\n      backgroundColof:this.state.color,\n      border:\"3px solid whitesmoke\",\n      borderRadius:\"4px\",\n      width:\"16px\",\n      height:\"16px\",\n      float:\"right\"\n    }}></div>\n  }\n}\n\nexport default ColorPicker;","import * as THREE from 'three';\nexport const loadModel = model => ({\n  type: 'LOAD_MODEL',\n  model,\n  id:Date.now()\n});\n\nexport const loadVector = vector => ({\n  type: 'LOAD_VECTOR',\n  vector,\n  id:Date.now()\n})\n\nexport const setScene = scene => ({\n  type: 'SET_SCENE',\n  scene,\n  id:Date.now()\n})\n\nexport const setPlane = plane => ({\n  type: 'SET_PLANE',\n  plane,\n  id:Date.now()\n})\nexport const setSky = sky => ({\n  type: 'SET_SKY',\n  sky,\n  id:Date.now()\n})\nexport const setBackgroundColor = color => ({\n  type: 'SET_BACKGROUND_COLOR',\n  color\n});\nexport const setGroundColor = color => ({\n  type: 'SET_GROUND_COLOR',\n  color\n});\n\nexport const changeSection = section => ({\n  type: 'CHANGE_SECTION',\n  section\n})\n\nexport const setLayers = layers => ({\n  type: 'SET_LAYERS',\n  layers\n})\n\nexport const setModelLayer = layer => ({\n  type: 'SET_MODEL_LAYER',\n  layer\n})\n\nexport const setModelRuntimeInfo = (modelId,info) => ({\n  type: 'SET_MODEL_RUNTIME_INFO',\n    modelId,\n  runtimeInfo:{\n    ...info\n  }\n})\n\nexport const toggleLayer = (data,visible) => {\n  console.log(visible)\n  const layer = data.name.split(\"-\")[0]\n  const sublayer = data.name.split(\"-\")[1]\n  if(layer === \"background\"){\n   if (sublayer === \"color\") {\n    data.scene.background = visible ? new THREE.Color(  data.backgroundColor ) : null;\n   }\n   else if (sublayer === \"image\") {\n    visible?data.scene.add(data.sky):data.scene.remove(data.sky)\n   }\n   else if (sublayer === \"video\") {}\n  } else if(layer === \"ground\"){\n    \n  }  else if(layer === \"models\"){\n    \n  } else if(layer === \"vectors\"){\n    \n  }\n}","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,\nno-alert, no-console, react/no-find-dom-node */\nimport React,{ useState,useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport 'rc-tree/assets/index.css';\nimport './LayerPanel.css';\nimport Tree, { TreeNode } from \"rc-tree\";\nimport ColorPicker from \"./layout/ColorPicker\";\nimport { SketchPicker } from 'react-color';\nimport { connect } from \"react-redux\";\nimport {changeSection,toggleLayer} from \"../actions\";\n\n\n\nfunction LayerPanel (props) {\n  const { keys } = props;\n  const defaultExpandedKeys= keys;\n  const defaultSelectedKeys = [];\n  const defaultCheckedKeys = keys\n\n  const onExpand = expandedKeys => {\n    console.log('onExpand', expandedKeys);\n  };\n\n  const onSelect = (selectedKeys, info) => {\n    const title = info.node.key;\n    console.log('selected', selectedKeys, info);\n    props.changeSection(selectedKeys.length ? title : null)\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    console.log('onCheck', checkedKeys, info);\n\n    toggleLayer({\n      name:info.node.key,\n      ...props\n    },info.checked);\n  };\n\n  const onEdit = () => {\n    setTimeout(() => {\n    }, 0);\n  };\n\n  const onDel = e => {\n    if (!window.confirm('sure to delete?')) {\n      return;\n    }\n    e.stopPropagation();\n  };\n\n  const [layers,setLayers] = useState(props.layers)\n\n  useEffect(()=>{\n    setLayers(props.layers);\n  },[props.layers])\n  const customLabel = (\n      <span className=\"cus-label\">\n        <span>operations: </span>\n        <span style={{ color: 'blue' }} onClick={onEdit}>\n          Edit\n        </span>\n        &nbsp;\n        <label onClick={e => e.stopPropagation()}>\n          <input type=\"checkbox\" /> checked\n        </label>\n        &nbsp;\n        <span style={{ color: '#EB0000' }} onClick={onDel}>\n          Delete\n        </span>\n      </span>\n    );\n    \n\n    return (\n      <div className=\"layers-panel\" style={{ margin: '0 20px' }}>\n        <Tree\n          className=\"myCls\"\n          showLine={true}\n          checkable={true}\n          multiple={false}\n          checkStrictly={true}\n          selectable={true}\n          defaultExpandAll={true}\n          onExpand={onExpand}\n          defaultSelectedKeys={defaultSelectedKeys}\n          defaultCheckedKeys={defaultCheckedKeys}\n          onSelect={onSelect}\n          onCheck={onCheck}\n          treeData={layers}\n        />\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    layers:state.api.layers,\n    scene:state.api.scene,\n    sky:state.api.sky.mesh,\n    backgroundColor:state.api.background.color,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeSection:section => dispatch(changeSection(section)),\n    toggleLayer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerPanel);\n","import React,{ useState,useEffect } from 'react';\nimport './ModelList.css';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport { SkeletonUtils } from 'three/examples/jsm/utils/SkeletonUtils.js';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {loadModel,changeSection,setModelLayer,setLayers} from \"../actions\";\n\n\nfunction ModelList(props) {\n  const [mode, setMode] = useState({});\n  const [position, setPosition] = useState(JSON.stringify({}));\n  const [scale, setScale] = useState(JSON.stringify({}));\n  const [rotation, setRotation] = useState(JSON.stringify({}));\n  const [vector, setVector] = useState({});\n\n  useEffect(()=>{\n    const newPosition = {}\n    const newRotation = {}\n    const newScale = {}\n    const newMode = {}\n    const newVector = {}\n    props.models.data.map(d=>{\n      newPosition[d.id] = position[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newRotation[d.id] = rotation[d.id] || JSON.stringify({x:0,y:0,z:0});\n      newScale[d.id] = scale[d.id] || JSON.stringify({x:1,y:1,z:1});\n      newMode[d.id] = mode[d.id] || \"info\";\n      newVector[d.id] = vector[d.id] || 0;\n    })\n    setPosition(newPosition);\n    setRotation(newRotation);\n    setScale(newScale);\n    setMode(newMode);\n    setVector(newVector);\n  },[props.models.data])\n  const onChange = (func,id,oldState,value) => func({...oldState,[id]:value});\n\n  return (\n    <div className=\"ModelList container\">\n      <div className=\"row\">\n      {props.models.data.map(d=>(\n        <div className=\"col-md-6 col-sm-6 col-xs-12\">\n          <div className=\"model-item\">\n            {mode[d.id] === \"info\" ? (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"settings\")}> \n                          <i className=\"fas fa-cog\"></i>\n                        </span> ) : (<span className=\"settings\" onClick={()=>onChange(setMode,d.id,mode,\"info\")}> \n                          <i className=\"fas fa-arrow-right\"></i>\n                        </span>)}\n            \n              {mode[d.id] === \"info\" ? (\n                <React.Fragment>\n                <div className=\"mm-form-block\">\n                  <div>id: {d.id}</div>\n                  <div>name: {d.name}</div>\n                  <div>size: {(d.size/1000/1000).toFixed(2)} Mb</div>\n                </div>\n                \n                <button className=\"mm-btn\" onClick={()=>{\n\n                  const theVector = props.vectors.filter(v=>{\n                    return v.id == vector[d.id]\n                  }\n                  )[0];\n                  if(!theVector) {\n                    return false;\n                  }\n                  if (theVector.name.includes(\"anime\")){\n                    let mesh;\n                    if(d.name.includes(\"glb\") || d.name.includes(\"gltf\")){\n                      mesh = SkeletonUtils.clone( d.mesh.scene );\n                      var mixer = startAnimation( mesh, d.mesh.animations, \"Walk\" );\n                      window.mergin_mode.mixers.push(mixer)\n                    } else {\n                      mesh = d.mesh.clone();\n\n                    }\n                    const rot = JSON.parse(rotation[d.id]);\n                    rot.x = Number(rot.x);\n                    rot.y = Number(rot.y);\n                    rot.z = Number(rot.z);\n                    const sca = JSON.parse(scale[d.id]);\n                    sca.x = Number(sca.x);\n                    sca.y = Number(sca.y);\n                    sca.z = Number(sca.z);\n                    // mesh.rotation.set(rot.x,rot.y,rot.z);\n                    const axisX = new THREE.Vector3(1, 0, 0);\n                    const axisY = new THREE.Vector3(0, 1, 0);\n                    const axisZ = new THREE.Vector3(0, 0, 1);\n                    mesh.rotateOnWorldAxis(axisX, rot.x);\n                    mesh.rotateOnWorldAxis(axisY, rot.y);\n                    // mesh.rotateOnWorldAxis(axisZ, rot.z);\n                    mesh.rotateOnWorldAxis(axisZ, (-theVector.array[0][0][3] )/63.6619772367581);\n                    // mesh.rotation.z = ((theVector.array[0][0][3])/63.6619772367581);\n\n                    mesh.scale.set(sca.x,sca.y,sca.z);\n                    mesh.position.set(...theVector.array[0][0]);\n                    mesh.castShadow = true;\n                    mesh.receiveShadow = true;\n                    props.scene.add(mesh);\n                    props.setModelLayer({\n                      id:Date.now(),\n                      vectorId:theVector.id,\n                      runtimeInfo:{animating:true,activeRow:0},\n                      mesh\n                    });\n                } else {\n\n                   let mesh;\n                    if(d.name.includes(\"glb\") || d.name.includes(\"gltf\")){\n                    mesh = SkeletonUtils.clone( d.mesh.scene );\n\n                    } else {\n                      mesh = d.mesh.clone();\n                    }\n\n                     var geometry,material;\n                mesh.traverse(function (node){\n                  if (node.isMesh) {\n                    geometry = node.geometry;\n                    material = node.material;\n                \n                    // var geometry = new THREE.SphereBufferGeometry( 0.5 );\n        // var material = new THREE.MeshPhongMaterial( { flatShading: true } );\n\n        mesh = new THREE.InstancedMesh( geometry, material, theVector.array[0].length,\n           false, //is it dynamic \n                  false,  //does it have color \n                  true,  //uniform scale\n                 );\n\n        var i = 0;\n        // var amount = 10;\n        // var offset = ( amount - 1 ) / 2;\n\n\n        for ( var i = 0; i < theVector.array[0].length; i ++ ) {\n        var transform = new THREE.Object3D();\n          // const pos = JSON.parse(position[d.id]);\n          // pos.x = Number(pos.x);\n          // pos.y = Number(pos.y);\n          // pos.z = Number(pos.z);\n          const rot = JSON.parse(rotation[d.id]);\n          rot.x = Number(rot.x);\n          rot.y = Number(rot.y);\n          rot.z = Number(rot.z);\n          const axisX = new THREE.Vector3(1, 0, 0);\n          const axisY = new THREE.Vector3(0, 1, 0);\n          const axisZ = new THREE.Vector3(0, 0, 1);\n          transform.rotateOnWorldAxis(axisX, rot.x);\n          transform.rotateOnWorldAxis(axisY, rot.y);\n          transform.rotateOnWorldAxis(axisZ, rot.z);\n          // mesh.rotateOnWorldAxis(axisZ, ( )/63.6619772367581);\n\n          const sca = JSON.parse(scale[d.id]);\n          sca.x = Number(sca.x);\n          sca.y = Number(sca.y);\n          sca.z = Number(sca.z);\n          // mesh.rotation.set(rot.x,rot.y,rot.z);\n\n          transform.scale.set(sca.x,sca.y,sca.z);\n          transform.position.set( ...theVector.array[0][i] );\n          transform.updateMatrix();\n\n          mesh.setMatrixAt( i ++, transform.matrix );\n\n        }\n\n        props.scene.add( mesh )\n  }\n                });\n                //     debugger;\n                // var geometry,material;\n                // mesh.traverse(function (node){\n                //   if (node.isMesh) {\n                //     geometry = node.geometry;\n                //     material = node.material;\n                //   }\n                // });\n\n                // // geometry.computeVertexNormals();\n                // //the instance group \n                // var cluster = new THREE.InstancedMesh( \n                //   geometry,\n                //   new THREE.MeshNormalMaterial(), \n                //   40, //instance count \n                //   // false, //is it dynamic \n                //   // false,  //does it have color \n                //   // true,  //uniform scale\n                // );\n\n                // var _v3 = new THREE.Vector3();\n                // var _q = new THREE.Quaternion();\n\n                // for ( var i=0 ; i < theVector.array[0].length ; i ++ ) {\n\n                //   // cluster.setQuaternionAt( i , _q );\n                //   cluster.setPositionAt( i , _v3.set( Math.random() , Math.random(), Math.random() ) );\n                //   // cluster.setScaleAt( i , _v3.set(1,1,1) );\n\n                // }\n                // props.scene.add(cluster);\n\n                  // theVector.array[0].map(r=>{\n                   \n                  //   // const pos = JSON.parse(position[d.id]);\n                  //   // pos.x = Number(pos.x);\n                  //   // pos.y = Number(pos.y);\n                  //   // pos.z = Number(pos.z);\n                  //   const rot = JSON.parse(rotation[d.id]);\n                  //   rot.x = Number(rot.x);\n                  //   rot.y = Number(rot.y);\n                  //   rot.z = Number(rot.z);\n                  //   const axisX = new THREE.Vector3(1, 0, 0);\n                  //   const axisY = new THREE.Vector3(0, 1, 0);\n                  //   const axisZ = new THREE.Vector3(0, 0, 1);\n                  //   mesh.rotateOnWorldAxis(axisX, rot.x);\n                  //   mesh.rotateOnWorldAxis(axisY, rot.y);\n                  //   mesh.rotateOnWorldAxis(axisZ, rot.z);\n                  //   // mesh.rotateOnWorldAxis(axisZ, ( )/63.6619772367581);\n\n                  //   const sca = JSON.parse(scale[d.id]);\n                  //   sca.x = Number(sca.x);\n                  //   sca.y = Number(sca.y);\n                  //   sca.z = Number(sca.z);\n                  //   // mesh.rotation.set(rot.x,rot.y,rot.z);\n\n                  //   mesh.scale.set(sca.x,sca.y,sca.z);\n                  //   // mesh.traverse(function (child) {\n                  //   //       if (child instanceof THREE.Mesh) {\n                  //   //           // apply texture\n                  //   //           // child.material =  new THREE.MeshLambertMaterial({color: 0x00ff00, transparent: true, opacity: 0.5});\n                  //   //           // child.material = new THREE.MeshPhongMaterial({color:\"#999\",wireframe:true});\n                  //   //           child.material.needsUpdate = true;\n                  //   //           // child.material.alphaTest = 0.5;\n                  //   //           // child.material.transparent = true;\n                  //   //           // child.material.depthWrite = true;\n\n\n                  //   //       }\n                  //   //   });\n\n                  //   if(theVector.name.includes(\"tree\")) {\n\n                  //     r[2] *=0.5;\n                      \n                  //     sca.x = (Math.random() * sca.x/2 + sca.x/2)\n                  //     sca.y = (Math.random() * sca.y/2 + sca.y/2)\n                  //     sca.z = (Math.random() * sca.z/2 + sca.z/2)\n                  //   }\n                  //   mesh.position.set(...r);\n                  //   mesh.castShadow = true;\n                  //   mesh.receiveShadow = true;\n\n\n                  //   props.scene.add(mesh)\n                  // })\n                }\n                const newLayers = [...props.layers];\n                newLayers[1].children[3].children.push({ key: `1-3-${newLayers[1].children[3].children.length}`, title: d.name + \"_\" + theVector.name, checkable:true,selectable:false})\n                props.setLayers(newLayers);\n                \n              }} >Add To Scene</button>\n                </React.Fragment>\n                ):(\n                <React.Fragment>\n                  <label>Rotation</label>\n                  <input onChange={e=>onChange(setRotation,d.id,rotation,e.target.value)} value={rotation[d.id]}/>\n                  <label>Scale</label>\n                  <input onChange={e=>onChange(setScale,d.id,scale,e.target.value)} value={scale[d.id]}/>\n                  <label>Position</label>\n                  {/*<input onChange={e=>onChange(setPosition,d.id,position,e.target.value)} value={position[d.id]}/>*/}\n                  <select onChange={e=> {\n                    onChange(setVector,d.id,vector,e.target.value)\n                  }}>\n                    <option value={0} selected={vector[d.id] == 0}>Select</option>\n                    {props.vectors.map(v=><option value={v.id} selected={vector[d.id] == v.id}>{v.name}</option>)}\n                  </select>\n                </React.Fragment>\n                )}\n              \n          </div>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n\nfunction startAnimation( skinnedMesh, animations, animationName ) {\n\n        var mixer = new THREE.AnimationMixer( skinnedMesh );\n        var clip = THREE.AnimationClip.findByName( animations, animationName );\n\n        if ( clip ) {\n\n          var action = mixer.clipAction( clip );\n          action.play();\n\n        }\n\n        return mixer;\n\n      }","import React,{ useState,useEffect } from 'react';\n// import './Background.css';\nimport { connect } from \"react-redux\";\n\nimport {loadModel,changeSection,setModelLayer,setLayers} from \"../actions\";\n\n\nfunction Background(props) {\n \n\n  return (\n    <div className=\"Background container\">\n      <div className=\"row\">\n      Background\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Background);\n\n","import React,{ useState,useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport {setPlane} from \"../actions/index\";\nfunction ModelList(props) {\n  const [vector, setVector] = useState(0);\n\n  const onChange = vectorId => setVector(vectorId);\n\n  return (\n    <div className=\"ModelList container\">\n      <h3>{props.title}</h3>\n      <select onChange={e=> {\n        let v = props.vectors.filter(vec => vec.id == e.target.value)[0]\n        if(!v) {return false;}\n        v = v.array[0];\n        var positions = props.plane.geometry.attributes.position.array;\n        var x, y, z, index;\n        x = y = z = index = 0;\n\n        for ( var i = 0, l = 100*100; i < l; i ++ ) {\n\n            index ++; \n            index ++;\n            positions[ index ++ ] = (((v[i] ||[])[2]) || 0)*0.005;\n\n        }\n        props.plane.geometry.attributes.position.needsUpdate = true;\n        var loader = new THREE.TextureLoader();\n          loader.crossOrigin = \"\";\n          loader.load('../assets/cropped.png',\n              function( texture ) {\n                const material = new THREE.MeshBasicMaterial({map: texture});\n                props.plane.material = material;\n                props.plane.material.needsUpdate = true;\n              },\n              function () {},  // onProgress function\n              function ( error ) { console.log( error ) } // onError function\n          );\n        \n        var material = new THREE.MeshPhongMaterial( {\n            color: \"#000\",\n            polygonOffset: true,\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\n            polygonOffsetUnits: 1\n        } );\n        props.plane.material = material;\n        props.plane.material.needsUpdate = true;\n\n        // var geo = new THREE.EdgesGeometry( props.plane.geometry ); // or WireframeGeometry\n        // var mat = new THREE.LineBasicMaterial( { color: 0x999999, linewidth: 2 } );\n        // var wireframe = new THREE.LineSegments( geo, mat );\n        // props.plane.add( wireframe );\n        props.setPlane(v)\n\n      }}>\n        <option value={0} selected={vector == 0}>Select</option>\n        {props.vectors.map(v=><option value={v.id} selected={vector == v.id}>{v.name}</option>)}\n      </select>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    vectors:state.api.vectors.data,\n    plane: state.api.plane.mesh\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setPlane: array => dispatch(setPlane({dem:array}))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModelList);\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n \nexport default function Slider (props) {\n    const onClick = (e,src) => {\n        e.stopPropagation();\n        props.onClick(src)\n    }\n        return (\n            <Carousel centerMode centerSlidePercentage={33} emulateTouch>\n                {\n                    props.slides.map(slide=>{\n                        return (\n                            <div>\n                                <img src={slide.src} className=\"mm-image mm-slider-img\"/>\n                                <p className=\"legend mm-btn\" onClick={e=>onClick(e,slide.src)}>Use {slide.legend}</p>\n                            </div>\n                        )\n                    })\n                }\n                \n\n            </Carousel>\n        );\n};","import React,{ useState,useEffect } from 'react';\n// import './Images.css';\n\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport Slider from './layout/Slider';\n\nimport {loadModel,changeSection,setModelLayer,setLayers} from \"../actions\";\n\n\nfunction Images(props) {\n  return (\n    <div className=\"Images container\">\n      <div className=\"row\">\n        <Slider \n          onClick={src=>{\n\n            if(src === \"../assets/banned.png\") {\n              props.sky.material = new THREE.MeshBasicMaterial({opacity: 0,\n                transparent: true,\n                alphaTest: 0.05,\n                side: THREE.DoubleSide\n              });\n              props.sky.material.needsUpdate = true;\n              return true;\n            }\n            var loader = new THREE.TextureLoader();\n            loader.crossOrigin = \"\";\n            loader.load(src,\n                  function( texture ) {\n                    props.sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n                    props.sky.material.needsUpdate = true;\n                    // props.scene.add(props.sky)  \n                  },\n                  function () {},  // onProgress function\n                  function ( error ) { console.log( error ) } // onError function\n              );\n          }}\n          slides={[\n            {src:\"../assets/banned.png\",legend:\"No Image\"},\n            {src:\"../assets/sky.jpg\",legend:\"Sky\"},\n            {src:\"../assets/night-sky.jpg\",legend:\"Night Sky\"},\n            {src:\"../assets/fantasy.jpg\",legend:\"Fantasy Sky\"},\n            ]}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    sky:state.api.sky.mesh,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Images);\n\n","import React,{ useState,useEffect } from 'react';\n// import './Color.css';\n\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport { ChromePicker } from 'react-color';\n\nimport {loadModel,changeSection,setModelLayer,setLayers,setBackgroundColor,setGroundColor} from \"../actions\";\n\n\nfunction Color(props) {\n  const [color,setColor] = useState(props.type === \"background\" ? props.backgroundColor : props.groundColor);\n  useEffect(()=>setColor(props.type === \"background\" ? props.backgroundColor : props.groundColor),[props.type]);\n\n  const handleComplete = color => {\n    setColor(color.hex);\n    if(props.type === \"background\") {\n      props.setBackgroundColor(color.hex);\n      props.scene.background = new THREE.Color( color.hex );  \n    } else {\n      props.setGroundColor(color.hex);\n      props.plane.material.color = new THREE.Color( color.hex );  \n    }\n    \n  };\n\n  return (\n    <div className=\"Color container\">\n      <div className=\"row\">\n        <ChromePicker \n        color={color}\n        onChange={handleComplete}\n        />\n      </div>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    models:state.api.models,\n    title:state.api.section.title,\n    scene:state.api.scene,\n    plane:state.api.plane.mesh,\n    vectors:state.api.vectors.data,\n    layers:state.api.layers,\n    backgroundColor:state.api.background.color,\n    groundColor:state.api.plane.color,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    changeSection:section => dispatch(changeSection(section)),\n    setModelLayer: layer => dispatch(setModelLayer(layer)),\n    setLayers: layers => dispatch(setLayers(layers)),\n    setBackgroundColor: color => dispatch(setBackgroundColor(color)),\n    setGroundColor: color => dispatch(setGroundColor(color)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Color);\n\n","import React,{ useState,useEffect } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport * as THREE from 'three';\nimport DropZone from \"./layout/DropZone\";\nimport {ThemeliodesProblima_2} from \"../helpers/ThemeliodiProblimata\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport createWorld from \"../helpers/createWorld\";\nimport SplitPane from 'react-split-pane';\nimport Modal from \"react-modal\";\nimport LayerPanel from \"./LayerPanel\"\nimport {setModelRuntimeInfo,loadVector,loadModel,changeSection,setScene,setLayers,setPlane,setSky} from \"../actions\";\nimport readXlsxFile from 'read-excel-file';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nimport * as XLSX from 'xlsx';\n\nimport ModelList from \"./ModelList\";\nimport Background from \"./Background\";\nimport Ground from \"./Ground\";\nimport Images from \"./Images\";\nimport Color from \"./Color\";\nModal.setAppElement('#root')\n\nfunction App(props) {\n  const allClasses = (name) => {\n    if(name === \"models\" ){\n      return <ModelList />\n    } else if(name === \"background\" ){\n      return <Background />\n    } \n    else if(name === \"background-color\" ){\n      return <Color type=\"background\"/>\n    }\n    else if(name === \"background-image\" ){\n      return <Images type=\"background\"/>\n    }\n    else if(name === \"ground-color\" ){\n      return <Color type=\"ground\"/>\n    }\n    else if(name === \"ground-image\" ){\n      return <Images type=\"ground\" />\n    }\n     else if(name === \"ground-vertices\" ){\n      return <Ground />\n    } else {\n      return <span></span>;\n    }\n  };\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [files, setFiles] = useState([])\n  const [elements, setElements] = useState({\n    mixers:[], camera:{}, controls:{}, scene:{}, renderer:{},pointer:{}, partials:{},loaders:{},onWindowResize:()=>{}\n  })\n  const toggleModal = ()=>setModalOpen(!modalOpen);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n\n  const  loadGLTFModel = file => {\n    const {name,size} = file[0];\n    const {scene,loaders} = elements;\n\n    const loader = new loaders.GLTFLoader();\n    var dracoLoader = new DRACOLoader();\n    loader.setDRACOLoader( dracoLoader );\n\n    loader.load2(file, gltf => {\n         // var scene = gltf.scene;\n\n          // model.animations = gltf.animations;\n          // model.scene = scene;\n\n          // Enable Shadows\n\n          gltf.scene.traverse( function ( object ) {\n\n            if ( object.isMesh ) {\n\n              object.castShadow = true;\n\n            }\n\n          } );\n        props.loadModel({name,size,object:gltf});\n        setModalOpen(!modalOpen);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });\n  }   \n  const  loadFBXModel = file => {\n    const {name,size} = file[0];\n    const {scene,loaders} = elements;\n\n    const loader = new loaders.FBXLoader();\n    \n    loader.load2(file, object => {\n        // console.log(object.animations)\n        // if(object.animations.length > 0) {\n        //   elements.mixer = new THREE.AnimationMixer( object );\n        //   var action = elements.mixer.clipAction( object.animations[ 0 ] );\n        //   action.play();  \n        // }\n        \n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        props.loadModel({name,size,object});\n        setModalOpen(!modalOpen);       \n        const newLayers = [...props.layers];\n        newLayers[0].children.push({ key: `0-${newLayers[0].children.length}`, title: name, checkable:false,selectable:false})\n        props.setLayers(newLayers);       \n\n      });\n  }\n  useEffect(()=>{\n      let {mixers,camera,controls,scene,renderer,pointer,partials,loaders} = elements;\n      const rendererContainer = document.getElementById(\"three-map\");\n      const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer,mixers,props.setModelRuntimeInfo);\n      props.setScene(newWorld.scene);\n      props.setPlane({id:Date.now(),mesh:newWorld.partials.plane});\n      props.setSky({id:Date.now(),mesh:newWorld.partials.sky});\n      setElements({...newWorld});\n  },[])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar expand=\"md\" className=\"navbar navbar-dark\">\n          <NavbarBrand href=\"#\"><div className=\"logo-container\"><div className=\"logo\"/></div></NavbarBrand>\n          <NavbarToggler onClick={toggleMenu} />\n          <Collapse isOpen={menuOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  File\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick = {toggleModal}>\n                    <span>Import </span>\n                  </DropdownItem>\n                  <DropdownItem divider />\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n            <NavbarText>\n                <NavLink href=\"https://github.com/prieston/mergin_mode\" target=\"_blank\">\n                <i className=\"fab fa-github\"></i>\n                <span>GitHub</span>\n                </NavLink>\n            </NavbarText>\n          </Collapse>\n        </Navbar>\n      </header>\n      <main>\n      <SplitPane split=\"vertical\" minSize={50} maxSize={-50} defaultSize={\"40%\"} onChange={elements.onWindowResize}>\n        <LayerPanel keys={[\"background-color\",\"background-image\"]} />\n        <SplitPane split=\"horizontal\" minSize={50} maxSize={-50} defaultSize={\"60%\"} onChange={elements.onWindowResize}>\n          <div id = \"three-map\" >\n            <div id=\"axes-helper\"></div>\n          </div>\n          {(props.section!== null && allClasses(props.section)) || <span></span>}\n        </SplitPane>\n      </SplitPane>\n        \n\n      </main>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={()=>setModalOpen(!modalOpen)}\n      >\n        <div className=\"container form\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <DropZone onChange={e => {\n                setFiles([...e.target.files]);\n              }} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-primary form-control\" onClick={()=>{\n\n                if(!files[0]) {return  false;}\n                Array.prototype.slice.call(files).map(file=>{\n                  const extention = file.name.split(\".\")[file.name.split(\".\").length - 1];\n                const vectorExt = [\"xlsx\",\"xls\",\"ods\",\"csv\",\"xyz\"];\n                if (vectorExt.indexOf(extention) > -1) {\n                  const reader = new FileReader();\n                  const rows= [];\n                  reader.onload = (evt) => { // evt = on_file_select event\n                      /* Parse data */\n                      const bstr = evt.target.result;\n                      const wb = XLSX.read(bstr, {type:'binary'});\n                      /* Get first worksheet */\n                      const wsname = wb.SheetNames[0];\n                      const ws = wb.Sheets[wsname];\n                      /* Convert array of arrays */\n                      const data = XLSX.utils.sheet_to_csv(ws, {header:1});\n                      /* Update state */\n                      rows.push(data.split(\"\\n\").map(v=>v.split(\",\").filter(v=>v.length > 0).map(n=>Number(n))));\n\n                      const {name,size} = file;\n                      const newLayers = [...props.layers];\n                      newLayers[1].children[2].children.push({ key: `1-2-${newLayers[1].children[2].children.length}`, title: name, checkable:true,selectable:false,icon:<span></span>})\n                      props.setLayers(newLayers);\n                      if(name.includes(\"anime\")){\n                        for(let i=0;i< rows[0].length - 1;i++) {\n                          const Xa = rows[0][i][0]; \n                          const Ya = rows[0][i][1];\n                          const Xb = (rows[0][i + 1] || [])[0] || 0; \n                          const Yb = (rows[0][i + 1] || [])[1] || 0; \n                          const {Gab,Sab} = ThemeliodesProblima_2(Xa,Ya,Xb,Yb)\n                          rows[0][i][3] = Number(Gab);\n                          rows[0][i][4] = Number(Sab);\n                        }\n                        props.loadVector({name,size,array:rows});\n                      } else {\n                        props.loadVector({name,size,array:rows});\n                      }\n                  };\n                  reader.readAsBinaryString(file);\n                  setModalOpen(!modalOpen);       \n                  \n                 \n                } else if(extention == \"fbx\") {\n                  loadFBXModel([file]);\n                } else if (extention === \"glb\" || extention === \"gltf\") {\n                  loadGLTFModel([file]);\n                }\n                // console.log(vectorExt)\n                })\n                \n                setFiles([])\n              }}>Load</button>\n            </div>\n            <div className=\"col-sm-6\">\n              <button className=\"btn btn-secondary form-control\" onClick={toggleModal}>Close</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    section:state.api.section.active,\n    title:state.api.section.title,\n    layers:state.api.layers,\n    vectors: state.api.vectors,\n    modelLayer:state.api.modelLayer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadModel:model =>dispatch(loadModel(model)),\n    loadVector:vector =>dispatch(loadVector(vector)),\n    changeSection:section => dispatch(changeSection(section)),\n    setScene:scene => dispatch(setScene(scene)),\n    setPlane:plane => dispatch(setPlane(plane)),\n    setSky:sky => dispatch(setSky(sky)),\n    setLayers:layers => dispatch(setLayers(layers)),\n    setModelRuntimeInfo:(modelId,info) => dispatch(setModelRuntimeInfo(modelId,info))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component }  from 'react';\nimport { combineReducers } from 'redux'\nwindow.mergin_mode = {\n\tmodelLayer: [],\n\tvectors:[],\n\tplane:{},\n\tsky:{},\n\tmixers:[]\n}\nconst initialState = {\n\tlayers:[\n\t  {\n\t    key: 'models',\n\t    title: 'Models',\n\t    checkable:false,\n\t    selectable:true,\n\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t    children: [\n\t    ],\n\t  },\n\t  {\n\t    key: 'scene',\n\t    title: 'Scene',\n\t    checkable:false,\n\t    selectable:false,\n\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t    children: [\n\t      {\n\t        key: 'background',\n\t        title: 'Background',\n\t        checkable:false,\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        children: [\n\t        { key: 'background-color', title: 'Color',icon:<span className=\"layer-icon\"><i className=\"fas fa-palette\"></i></span>},\n\t        { key: 'background-image', title: 'Image',icon:<span className=\"layer-icon\"><i className=\"far fa-file-image\"></i></span> },\n\t        { key: 'background-video', title: 'Video',icon:<span className=\"layer-icon\"><i className=\"far fa-file-video\"></i></span> }\n\t      ] },\n\t      {\n\t        key: 'ground',\n\t        title: 'Ground',\n\t        checkable:false,\n   \t\t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n   \t\t    // switcherIcon:<span className=\"layer-icon switch-icon\"><i className=\"fas fa-chevron-right\"></i></span>,\n\n\t        selectable:false,\n\t        children: [\n\t          { key: 'ground-color', title: 'Color',icon:<span className=\"layer-icon\"><i className=\"fas fa-palette\"></i></span>},\n\t          { key: 'ground-image', title: 'Image' ,icon:<span className=\"layer-icon\"><i className=\"far fa-file-image\"></i></span>},\n\t          { key: 'ground-vertices', title: 'Vertices' ,icon:<span className=\"layer-icon\"><i className=\"fas fa-mountain\"></i></span>}\n\t        ],\n\t      },\n\t      {\n\t        key: 'vector-layers',\n\t        title: 'Vector Layers',\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t      {\n\t        key: 'model-layers',\n\t        title: 'Model Layers',\n\t   \t    icon:<span className=\"layer-icon\"><i className=\"far fa-folder\"></i></span>,\n\t        checkable:false,\n\t        selectable:false,\n\t        children: []\n\t      },\n\t    ],\n\t  },\n\t],\n\tscene:{\t},\n\tplane:{\n\t\tid:null,\n\t\tmesh:{},\n\t\tdem:[],\n\t\tcolor:\"#222\"\n\t},\n\tsky:{\n\t\tid:null,\n\t\tmesh:{}\n\t},\n\tbackground:{\n\t\tcolor:\"#000\"\n\t},\n\tmodels:{\n\t\tdata:[]\n\t},\n\tvectors:{\n\t\tdata:[]\n\t},\n\tmodelLayer:[],\n\tsection:{\n\t\tactive:null,\n\t\ttitle:null\n\t}\n};\n\nconst titles= {\n\tmodels:\"Models\"\n};\n\nconst api = (state = initialState, action) => {\n  switch (action.type) {\n  \tcase \"LOAD_MODEL\":\n\t  \treturn Object.assign({},state, {\n\t  \t\tmodels: Object.assign({},state.models,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.models.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tmesh:action.model.object,\n\t  \t\t\t\t\tname:action.model.name,\n\t  \t\t\t\t\tsize:action.model.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\tcase \"LOAD_VECTOR\":{\n\n\t\tconst newState = Object.assign({},state, {\n\t  \t\tvectors: Object.assign({},state.vectors,{\n\t  \t\t\tdata:[\n\t  \t\t\t\t...state.vectors.data,\n\t  \t\t\t\t{\n\t  \t\t\t\t\tid:action.id,\n\t  \t\t\t\t\tarray:action.vector.array,\n\t  \t\t\t\t\tname:action.vector.name,\n\t  \t\t\t\t\tsize:action.vector.size\n\t  \t\t\t\t}\n\t  \t\t\t]\n\t  \t\t}\n\t  \t)});\n\t  \twindow.mergin_mode.vectors = newState.vectors;\n\t  \treturn newState; \n\t}\n  \tcase \"CHANGE_SECTION\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tsection:Object.assign({},state.section,{\n\t  \t\t\tactive:action.section,\n\t  \t\t\ttitle:titles[action.section] || null\n\t  \t\t})\n\t  \t});\n\tcase \"SET_SCENE\":\n\t  \treturn Object.assign({},state,{\n\t  \t\tscene:action.scene,\n\t  \t});\n\tcase \"SET_PLANE\":\n\t  \tconst newState = Object.assign({},state,{\n\t  \t\tplane:{...state.plane,...action.plane},\n\t  \t});\n\t  \twindow.mergin_mode.plane = newState.plane;\n\t  \treturn newState;\n\tcase \"SET_SKY\":{\n\t\t  \tconst newState = Object.assign({},state,{\n\t\t  \t\tsky:{...state.sky,...action.sky},\n\t\t  \t});\n\t\t  \twindow.mergin_mode.sky = newState.sky;\n\t\t  \treturn newState;}\n\tcase \"SET_LAYERS\":\n\t\treturn Object.assign( {},state,{\n\t\t\tlayers: action.layers\n\t  \t});\n\tcase \"SET_BACKGROUND_COLOR\":\n\t\treturn Object.assign( {},state,{\n\t\t\tbackground: {color:action.color}\n\t  \t});\n\tcase \"SET_GROUND_COLOR\":\n\t\treturn Object.assign( {},state,{\n\t\t\tplane: {...state.plane,color:action.color}\n\t  \t});\n\tcase \"SET_MODEL_LAYER\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer, action.layer]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n\tcase \"SET_MODEL_RUNTIME_INFO\":{\n\t\tconst newState = Object.assign( {},state,{\n\t\t\tmodelLayer: [...state.modelLayer.map(m=>{\n\t\t\t\t// console.log(m.id,action.modelId)\n\t\t\t\tif(m.id == action.modelId){\n\t\t\t\t\tm.runtimeInfo = action.runtimeInfo\n\t\t\t\t};\n\t\t\t\treturn m;\n\t\t\t})]\n\t  \t});\n\t  \twindow.mergin_mode.modelLayer = newState.modelLayer;\n\t\treturn newState; \n\t}\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  api\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from \"redux-thunk\";\n\nimport reducer from \"./reducers\";\n\nconst rootElement = document.getElementById('root');\n\nconst loggerMiddleware = createLogger({\n  // ...options\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunkMiddleware , loggerMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}